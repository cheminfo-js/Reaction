{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 07003204d1f4b1687d8d","webpack:///./src/index.js","webpack:///./src/utils.js","webpack:///./node_modules/rxn-parser/src/index.js","webpack:///./src/svg-browser.js","webpack:///./node_modules/svg.js/dist/svg.js"],"names":[],"mappings":"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","file":"reaction.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"reaction\"] = factory();\n\telse\n\t\troot[\"reaction\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 07003204d1f4b1687d8d","import {\n    getFormat,\n    organizeData\n} from './utils';\nimport SVG from './svg';\n\nconst config = {\n    DISTANCE: 10, // separation distance between elements of the svg\n    SVG_OPTIONS: { // configuration for the svg retrieved from OCL\n        suppressChiralText: true,\n        suppressCIPParity: true,\n        suppressESR: true,\n        noStereoProblem: true\n    }\n};\n\nexport default class Reaction {\n    constructor(data, options) {\n        this.data = data;\n        this.OCL = undefined;\n\n        var {\n            catPrefix = false,\n            font = {\n                family: 'Helvetica',\n                anchor: 'middle',\n                size: 15\n            },\n            domElement\n        } = options;\n\n        this.catPrefix = catPrefix;\n        this.font = font;\n        this.domElement = domElement;\n    }\n\n    setOCL(OCL) {\n        this.OCL = OCL;\n    }\n\n    static fromJSON(reactionJSON, options) {\n        return new Reaction(reactionJSON, options);\n    }\n\n    static fromRXN(reactionRXN, options) {\n        return Reaction.fromJSON(getFormat(reactionRXN), options);\n    }\n\n    toSVG() {\n        if (this.OCL === undefined) {\n            throw new Error('OCL is not defined on this instance of reaction');\n        }\n\n        var data = organizeData(this.data, this.catPrefix, this.OCL);\n        var context = SVG(this.domElement);\n        draw(context, data, this.font);\n\n        return context.svg();\n    }\n}\n\nconst distance = 10;\n\nfunction draw(context, data, font) {\n    var {\n        starting,\n        reagents,\n        products,\n        text\n    } = data;\n\n    var selectedFont = font;\n\n    console.log(context);\n    var output = context.group();\n    var startingGroup = drawGroup(context, starting, {\n        joinBy: '+',\n        font: selectedFont\n    });\n\n    var reagentsGroup = drawGroup(context, reagents, {\n        joinBy: '',\n        isVertical: true\n    });\n    output.add(startingGroup);\n    output.add(reagentsGroup);\n\n    var startingBox = startingGroup.rbox(context);\n    // var reagentBox = reagentsGroup.rbox(context);\n\n    // put catalyst over the arrow\n    var subFont = Object.assign({}, selectedFont, {\n        'baseline-shift': 'sub',\n        'font-size': 'small'\n    });\n    var arrowBelow = context.text(function (add) {\n        for (var i = 0; i < text.arrow.length; ++i) {\n            var currentText = text.arrow[i];\n            if (Array.isArray(currentText)) {\n                // process MF\n                for (var j = 0; j < currentText.length; ++j) {\n                    var a = add.tspan(currentText[j]);\n                    if (j % 2 === 1) {\n                        a.font(subFont);\n                    } else {\n                        a.font(selectedFont);\n                    }\n                }\n            } else if (currentText !== '') {\n                add.tspan(currentText).font(selectedFont);\n                if (currentText === 'Cat. ') {\n                    continue;\n                }\n            }\n            add.tspan(' ').font(selectedFont).newLine();\n        }\n    });\n\n    //arrowBelow.font(selectedFont);\n    var arrowBelowBox = arrowBelow.rbox(context);\n    arrowBelow.move(startingBox.x2 + arrowBelowBox.width / 2.0 + config.DISTANCE, startingBox.cy + config.DISTANCE);\n\n    var reagentsBox = reagentsGroup.rbox(context);\n    reagentsGroup.dmove(startingBox.width / 2.0 + reagentsBox.width / 2.0 + config.DISTANCE,\n        startingBox.cy - reagentsBox.cy - (reagentsBox.height / 2.0) - config.DISTANCE);\n\n    var arrowWidth = distance;\n    reagentsBox = reagentsGroup.rbox(context);\n    arrowBelowBox = arrowBelow.rbox(context);\n\n    if (arrowBelowBox.width > reagentsBox.width) {\n        arrowWidth += arrowBelowBox.width;\n        var moveCata = arrowWidth / 2.0 - reagentsBox.width / 2.0;\n        var moveBelow = config.DISTANCE / 2.0;\n    } else {\n        arrowWidth += reagentsBox.width;\n        moveCata = config.DISTANCE / 2.0;\n        moveBelow = arrowWidth / 2.0 - arrowBelowBox.width / 2.0;\n    }\n    reagentsGroup.x(reagentsGroup.x() + moveCata);\n\n    arrowBelow.x(arrowBelow.x() + moveBelow);\n    var arrow = makeArrow(context, startingBox.x2 + config.DISTANCE, startingBox.cy, arrowWidth);\n\n    // once we have it on the right position we can shrink it\n    var prevWidth = reagentsGroup.rbox(context).w;\n    reagentsGroup.transform({\n        scale: 0.8\n    });\n    var width = reagentsGroup.rbox(context).w;\n    reagentsGroup.dmove(0, prevWidth - width - config.DISTANCE);\n\n\n    output.add(arrow);\n    output.add(arrowBelow);\n\n    var outputBBox = output.rbox(context);\n    var productsGroup = drawGroup(context, products, {\n        labels: text.products,\n        isVertical: false,\n        joinBy: '+',\n        font: selectedFont\n    });\n    var productsBox = productsGroup.rbox(context);\n    productsGroup.dmove(Math.abs(outputBBox.x2 - productsBox.x) + config.DISTANCE, 0);\n\n    output.add(productsGroup);\n\n    outputBBox = output.rbox(context);\n    context.size(outputBBox.x + outputBBox.width, outputBBox.y + outputBBox.height);\n}\n\nfunction makeArrow(context, x, y, width) {\n    var arrow = context.group();\n    arrow.line(x, y, x + width, y).stroke({\n        width: 1\n    });\n    var triangle = arrow.polygon([0, 0, 7, 7, 0, 7]);\n    triangle.center(x + width, y).rotate(-135);\n    return arrow;\n}\n\nfunction getGroup(context, svg) {\n    var g1 = context.group();\n    g1.svg(svg);\n    var b = g1.rbox(context);\n    g1.move(-b.x, -b.y);\n\n    return g1;\n}\n\nfunction move(elem, x, y) {\n    elem.center(elem.x() + x, elem.y() + y);\n}\n\nconst svgOptions = {\n    suppressChiralText: true,\n    suppressCIPParity: true,\n    suppressESR: true,\n    noStereoProblem: true\n};\n\nfunction drawGroup(context, array, options) {\n    var {\n        joinBy,\n        isVertical,\n        labels,\n        font\n    } = options;\n\n    var group = context.group();\n    var currentX = 100;\n    var currentY = 100;\n    for (var i = 0; i < array.length; ++i) {\n        var currentReagent = array[i];\n        var currentSVG = currentReagent.toSVG(200, 200, String(i), svgOptions);\n        var elem = getGroup(context, currentSVG);\n\n        if (joinBy && i > 0) {\n            var text = group.text(joinBy);\n            text.center(currentX, currentY);\n            var reagentBox = elem.rbox(context);\n            var dist = config.DISTANCE + reagentBox.width / 2.0;\n            if (isVertical) {\n                currentY += dist;\n            } else {\n                currentX += dist;\n            }\n        }\n\n        move(elem, currentX, currentY);\n        var box = elem.rbox(context);\n        if (labels && labels[i]) {\n            text = group.text(labels[i]);\n            text.font(font);\n            text.move(box.cx, box.cy + 20);\n        }\n\n        dist = config.DISTANCE + box.width / 2.0;\n        if (isVertical) {\n            currentY += dist;\n        } else {\n            currentX += dist;\n        }\n        group.add(elem);\n    }\n    group.move(100, 100);\n\n    return group;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import parse from 'rxn-parser';\n\nexport function getFormat(rxnData, OCL) {\n    var {\n        reagents,\n        products\n    } = parse(rxnData);\n\n    reagents = reagents.map(elem => {\n        var output = {};\n        var mol = OCL.Molecule.fromMolfile(elem);\n        output.ocl = mol.getIDCodeAndCoordinates();\n        output.kind = 'starting material';\n\n        return output;\n    });\n\n    products = products.map(elem => {\n        var output = {};\n        var mol = OCL.Molecule.fromMolfile(elem);\n        output.ocl = mol.getIDCodeAndCoordinates();\n\n        return output;\n    });\n\n\n    return {\n        reagents: reagents,\n        products: products,\n        conditions: ''\n    };\n}\n\nexport function organizeData(data, catPrefix, OCL) {\n    var oclMap = getOCLMap(OCL);\n    var output = {\n        products: data.products.map(oclMap),\n        text: getText(data, catPrefix, oclMap)\n    };\n\n    var starting = [];\n    var reagents = [];\n\n\n    for (var i = 0; i < data.reagents.length; ++i) {\n        var current = data.reagents[i];\n        switch (current.kind) {\n            case 'reagent':\n                reagents.push(oclMap(current));\n                break;\n            case 'starting material':\n                starting.push(oclMap(current));\n                break;\n            default:\n        }\n    }\n\n    output.starting = starting;\n    output.reagents = reagents;\n\n    return output;\n}\n\nfunction getOCLMap(OCL) {\n    return (elem) => OCL.Molecule.fromIDCode(elem.ocl.idCode);\n}\n\nfunction getText(data, catPrefix, oclMap) {\n    var output = {\n        products: []\n    };\n\n    var arrow = [];\n\n    // add catalyst\n    var catalyst = data.reagents.find(elem => elem.kind === 'catalyst');\n    if (catalyst) {\n        if (catPrefix) {\n            arrow.push('Cat. ');\n        }\n        arrow.push(splitShortName(oclMap(catalyst).getMolecularFormula().formula));\n    }\n\n    // add solvent\n    var solvent = data.reagents.find(elem => elem.kind === 'solvent');\n    if (solvent) {\n        arrow.push(splitShortName(oclMap(solvent).getMolecularFormula().formula));\n    }\n\n    arrow.push(data.conditions.replace(/(<([^>]+)>)|\\n/ig, ''));\n    var products = data.products;\n    var bestYieldStr = '';\n    if (products.length === 1) {\n        bestYieldStr = `Best yield: ${String(products[0].yield)} %`;\n    } else if (products.length > 1) {\n        var bestYield = -1;\n        for (var i = 0; i < products.length; ++i) {\n            var currentProduct = products[i];\n            output.products.push(`${String(currentProduct.yield)} %`);\n            if (currentProduct.yield > bestYield) {\n                bestYield = currentProduct.yield;\n            }\n        }\n        bestYieldStr = `Best yield: ${String(bestYield)} %`;\n    }\n\n    arrow.push(bestYieldStr);\n    output.arrow = arrow;\n\n    return output;\n}\n\nfunction splitShortName(shortName) {\n    var regexps = [/[A-Za-z]/, /\\d/];\n    var index = 0;\n    var currentRegex = regexps[index];\n    var output = [];\n    var str = '';\n    for (var i = 0; i < shortName.length; ++i) {\n        if (currentRegex.test(shortName[i])) {\n            str += shortName[i];\n        } else {\n            output.push(str);\n            str = shortName[i];\n            index = (index + 1) % 2;\n            currentRegex = regexps[index];\n        }\n    }\n    output.push(str);\n    return output;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","'use strict';\n\nfunction parse(rxn) {\n    if (typeof rxn !== 'string') {\n        throw new TypeError('Parameter \"rxn\" must be a string');\n    }\n    // we will find the delimiter in order to be much faster and not use regular expression\n    var header = rxn.substr(0, 1000);\n    var crlf = '\\n';\n    if (header.indexOf('\\r\\n') > -1) {\n        crlf = '\\r\\n';\n    } else if (header.indexOf('\\r') > -1) {\n        crlf = '\\r';\n    }\n\n    var rxnParts = rxn.split(crlf + '$MOL' + crlf);\n\n    var reagents=[];\n    var products=[];\n\n    var result={};\n    result.reagents=reagents;\n    result.products=products;\n\n\n    // the first part is expected to contain the number of reagents and products\n\n    // First part should start with $RXN\n    // and the fifth line should contain the number of reagents and products\n    if (rxnParts.length===0) throw new Error('file looks empty');\n\n    var header=rxnParts[0];\n    if (header.indexOf(\"$RXN\")!=0) throw new Error('file does not start with $RXN');\n\n    var lines=header.split(crlf);\n    if (lines.length<5) throw new Error('incorrect number of lines in header');\n\n    var numberReagents=lines[4].substring(0,3) >> 0;\n    var numberProducts=lines[4].substring(3,6) >> 0;\n\n    if (numberReagents+numberProducts!=rxnParts.length-1) throw new Error('not the correct number of molecules');\n\n    for (var i=1; i<rxnParts.length; i++) {\n        if (i<=numberReagents) {\n            reagents.push(rxnParts[i]);\n        } else {\n            products.push(rxnParts[i]);\n        }\n    }\n    return result;\n\n}\n\nmodule.exports = parse;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rxn-parser/src/index.js","export {default as default} from 'svg.js';\nconsole.log(\"im in a browser!\")\n\n\n// WEBPACK FOOTER //\n// ./src/svg-browser.js","/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.6.3\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Fri Jul 21 2017 14:50:37 GMT+0200 (Mitteleuropäische Sommerzeit)\n*/;\n(function(root, factory) {\r\n  /* istanbul ignore next */\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function(){\r\n      return factory(root, root.document)\r\n    })\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n  } else {\r\n    root.SVG = factory(root, root.document)\r\n  }\r\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\r\n// The main wrapping element\r\nvar SVG = this.SVG = function(element) {\r\n  if (SVG.supported) {\r\n    element = new SVG.Doc(element)\r\n\r\n    if(!SVG.parser.draw)\r\n      SVG.prepare()\r\n\r\n    return element\r\n  }\r\n}\r\n\r\n// Default namespaces\r\nSVG.ns    = 'http://www.w3.org/2000/svg'\r\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\nSVG.xlink = 'http://www.w3.org/1999/xlink'\r\nSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\r\n// Svg support test\r\nSVG.supported = (function() {\r\n  return !! document.createElementNS &&\r\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n})()\r\n\r\n// Don't bother to continue if SVG is not supported\r\nif (!SVG.supported) return false\r\n\r\n// Element id sequence\r\nSVG.did  = 1000\r\n\r\n// Get next named element id\r\nSVG.eid = function(name) {\r\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n}\r\n\r\n// Method for element creation\r\nSVG.create = function(name) {\r\n  // create element\r\n  var element = document.createElementNS(this.ns, name)\r\n\r\n  // apply unique id\r\n  element.setAttribute('id', this.eid(name))\r\n\r\n  return element\r\n}\r\n\r\n// Method for extending objects\r\nSVG.extend = function() {\r\n  var modules, methods, key, i\r\n\r\n  // Get list of modules\r\n  modules = [].slice.call(arguments)\r\n\r\n  // Get object with extensions\r\n  methods = modules.pop()\r\n\r\n  for (i = modules.length - 1; i >= 0; i--)\r\n    if (modules[i])\r\n      for (key in methods)\r\n        modules[i].prototype[key] = methods[key]\r\n\r\n  // Make sure SVG.Set inherits any newly added methods\r\n  if (SVG.Set && SVG.Set.inherit)\r\n    SVG.Set.inherit()\r\n}\r\n\r\n// Invent new element\r\nSVG.invent = function(config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create == 'function' ?\r\n    config.create :\r\n    function() {\r\n      this.constructor.call(this, SVG.create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit)\r\n    initializer.prototype = new config.inherit\r\n\r\n  // Extend with methods\r\n  if (config.extend)\r\n    SVG.extend(initializer, config.extend)\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct)\r\n    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\r\n  return initializer\r\n}\r\n\r\n// Adopt existing svg elements\r\nSVG.adopt = function(node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance) return node.instance\r\n\r\n  // initialize variables\r\n  var element\r\n\r\n  // adopt with element-specific settings\r\n  if (node.nodeName == 'svg')\r\n    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\r\n  else if (node.nodeName == 'linearGradient')\r\n    element = new SVG.Gradient('linear')\r\n  else if (node.nodeName == 'radialGradient')\r\n    element = new SVG.Gradient('radial')\r\n  else if (SVG[capitalize(node.nodeName)])\r\n    element = new SVG[capitalize(node.nodeName)]\r\n  else\r\n    element = new SVG.Element(node)\r\n\r\n  // ensure references\r\n  element.type  = node.nodeName\r\n  element.node  = node\r\n  node.instance = element\r\n\r\n  // SVG.Class specific preparations\r\n  if (element instanceof SVG.Doc)\r\n    element.namespace().defs()\r\n\r\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\r\n  return element\r\n}\r\n\r\n// Initialize parsing element\r\nSVG.prepare = function() {\r\n  // Select document body and create invisible svg element\r\n  var body = document.getElementsByTagName('body')[0]\r\n    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\r\n\r\n  // Create parser object\r\n  SVG.parser = {\r\n    body: body || document.documentElement\r\n  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').node\r\n  , poly: draw.polyline().node\r\n  , path: draw.path().node\r\n  , native: SVG.create('svg')\r\n  }\r\n}\r\n\r\nSVG.parser = {\r\n  native: SVG.create('svg')\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  if(!SVG.parser.draw)\r\n    SVG.prepare()\r\n}, false)\r\n\n// Storage for regular expressions\r\nSVG.regex = {\r\n  // Parse unit value\r\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n  // Parse hex value\r\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n  // Parse rgb value\r\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n  // Parse reference id\r\n, reference:        /#([a-z0-9\\-_]+)/i\r\n\r\n  // splits a transformation chain\r\n, transforms:       /\\)\\s*,?\\s*/\r\n\r\n  // Whitespace\r\n, whitespace:       /\\s/g\r\n\r\n  // Test hex value\r\n, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\r\n  // Test rgb value\r\n, isRgb:            /^rgb\\(/\r\n\r\n  // Test css declaration\r\n, isCss:            /[^:]+:[^;]+;?/\r\n\r\n  // Test for blank string\r\n, isBlank:          /^(\\s+)?$/\r\n\r\n  // Test for numeric string\r\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n  // Test for percent value\r\n, isPercent:        /^-?[\\d\\.]+%$/\r\n\r\n  // Test for image url\r\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n  // split at whitespace and comma\r\n, delimiter:        /[\\s,]+/\r\n\r\n  // The following regex are used to parse the d attribute of a path\r\n\r\n  // Matches all hyphens which are not after an exponent\r\n, hyphen:           /([^e])\\-/gi\r\n\r\n  // Replaces and tests for all path letters\r\n, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\r\n  // yes we need this one, too\r\n, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\r\n  // matches 0.154.23.45\r\n, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n  // matches .\r\n, dots:             /\\./g\r\n}\r\n\nSVG.utils = {\r\n  // Map function\r\n  map: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      result.push(block(array[i]))\r\n\r\n    return result\r\n  }\r\n\r\n  // Filter function\r\n, filter: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      if (block(array[i]))\r\n        result.push(array[i])\r\n\r\n    return result\r\n  }\r\n\r\n  // Degrees to radians\r\n, radians: function(d) {\r\n    return d % 360 * Math.PI / 180\r\n  }\r\n\r\n  // Radians to degrees\r\n, degrees: function(r) {\r\n    return r * 180 / Math.PI % 360\r\n  }\r\n\r\n, filterSVGElements: function(nodes) {\r\n    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\r\n  }\r\n\r\n}\n\r\nSVG.defaults = {\r\n  // Default attribute values\r\n  attrs: {\r\n    // fill and stroke\r\n    'fill-opacity':     1\r\n  , 'stroke-opacity':   1\r\n  , 'stroke-width':     0\r\n  , 'stroke-linejoin':  'miter'\r\n  , 'stroke-linecap':   'butt'\r\n  , fill:               '#000000'\r\n  , stroke:             '#000000'\r\n  , opacity:            1\r\n    // position\r\n  , x:                  0\r\n  , y:                  0\r\n  , cx:                 0\r\n  , cy:                 0\r\n    // size\r\n  , width:              0\r\n  , height:             0\r\n    // radius\r\n  , r:                  0\r\n  , rx:                 0\r\n  , ry:                 0\r\n    // gradient\r\n  , offset:             0\r\n  , 'stop-opacity':     1\r\n  , 'stop-color':       '#000000'\r\n    // text\r\n  , 'font-size':        16\r\n  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n  , 'text-anchor':      'start'\r\n  }\r\n\r\n}\n// Module for color convertions\r\nSVG.Color = function(color) {\r\n  var match\r\n\r\n  // initialize defaults\r\n  this.r = 0\r\n  this.g = 0\r\n  this.b = 0\r\n\r\n  if(!color) return\r\n\r\n  // parse color\r\n  if (typeof color === 'string') {\r\n    if (SVG.regex.isRgb.test(color)) {\r\n      // get rgb values\r\n      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1])\r\n      this.g = parseInt(match[2])\r\n      this.b = parseInt(match[3])\r\n\r\n    } else if (SVG.regex.isHex.test(color)) {\r\n      // get hex values\r\n      match = SVG.regex.hex.exec(fullHex(color))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1], 16)\r\n      this.g = parseInt(match[2], 16)\r\n      this.b = parseInt(match[3], 16)\r\n\r\n    }\r\n\r\n  } else if (typeof color === 'object') {\r\n    this.r = color.r\r\n    this.g = color.g\r\n    this.b = color.b\r\n\r\n  }\r\n\r\n}\r\n\r\nSVG.extend(SVG.Color, {\r\n  // Default to hex conversion\r\n  toString: function() {\r\n    return this.toHex()\r\n  }\r\n  // Build hex value\r\n, toHex: function() {\r\n    return '#'\r\n      + compToHex(this.r)\r\n      + compToHex(this.g)\r\n      + compToHex(this.b)\r\n  }\r\n  // Build rgb value\r\n, toRgb: function() {\r\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n  }\r\n  // Calculate true brightness\r\n, brightness: function() {\r\n    return (this.r / 255 * 0.30)\r\n         + (this.g / 255 * 0.59)\r\n         + (this.b / 255 * 0.11)\r\n  }\r\n  // Make color morphable\r\n, morph: function(color) {\r\n    this.destination = new SVG.Color(color)\r\n\r\n    return this\r\n  }\r\n  // Get morphed color at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // normalise pos\r\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n    // generate morphed color\r\n    return new SVG.Color({\r\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n    })\r\n  }\r\n\r\n})\r\n\r\n// Testers\r\n\r\n// Test if given value is a color string\r\nSVG.Color.test = function(color) {\r\n  color += ''\r\n  return SVG.regex.isHex.test(color)\r\n      || SVG.regex.isRgb.test(color)\r\n}\r\n\r\n// Test if given value is a rgb object\r\nSVG.Color.isRgb = function(color) {\r\n  return color && typeof color.r == 'number'\r\n               && typeof color.g == 'number'\r\n               && typeof color.b == 'number'\r\n}\r\n\r\n// Test if given value is a color\r\nSVG.Color.isColor = function(color) {\r\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n}\n// Module for array conversion\r\nSVG.Array = function(array, fallback) {\r\n  array = (array || []).valueOf()\r\n\r\n  // if array is empty and fallback is provided, use fallback\r\n  if (array.length == 0 && fallback)\r\n    array = fallback.valueOf()\r\n\r\n  // parse array\r\n  this.value = this.parse(array)\r\n}\r\n\r\nSVG.extend(SVG.Array, {\r\n  // Make array morphable\r\n  morph: function(array) {\r\n    this.destination = this.parse(array)\r\n\r\n    // normalize length of arrays\r\n    if (this.value.length != this.destination.length) {\r\n      var lastValue       = this.value[this.value.length - 1]\r\n        , lastDestination = this.destination[this.destination.length - 1]\r\n\r\n      while(this.value.length > this.destination.length)\r\n        this.destination.push(lastDestination)\r\n      while(this.value.length < this.destination.length)\r\n        this.value.push(lastValue)\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Clean up any duplicate points\r\n, settle: function() {\r\n    // find all unique values\r\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n      if (seen.indexOf(this.value[i]) == -1)\r\n        seen.push(this.value[i])\r\n\r\n    // set new value\r\n    return this.value = seen\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed array\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\r\n    return new SVG.Array(array)\r\n  }\r\n  // Convert array to string\r\n, toString: function() {\r\n    return this.value.join(' ')\r\n  }\r\n  // Real value\r\n, valueOf: function() {\r\n    return this.value\r\n  }\r\n  // Parse whitespace separated string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    return this.split(array)\r\n  }\r\n  // Strip unnecessary whitespace\r\n, split: function(string) {\r\n    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n  }\r\n  // Reverse array\r\n, reverse: function() {\r\n    this.value.reverse()\r\n\r\n    return this\r\n  }\r\n, clone: function() {\r\n    var clone = new this.constructor()\r\n    clone.value = array_clone(this.value)\r\n    return clone\r\n  }\r\n})\n// Poly points array\r\nSVG.PointArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [[0,0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PointArray.prototype = new SVG.Array\r\nSVG.PointArray.prototype.constructor = SVG.PointArray\r\n\r\nSVG.extend(SVG.PointArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i].join(','))\r\n\r\n    return array.join(' ')\r\n  }\r\n  // Convert array to line object\r\n, toLine: function() {\r\n    return {\r\n      x1: this.value[0][0]\r\n    , y1: this.value[0][1]\r\n    , x2: this.value[1][0]\r\n    , y2: this.value[1][1]\r\n    }\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push([\r\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n      ])\r\n\r\n    return new SVG.PointArray(array)\r\n  }\r\n  // Parse point string and flat array\r\n, parse: function(array) {\r\n    var points = []\r\n\r\n    array = array.valueOf()\r\n\r\n    // if it is an array\r\n    if (Array.isArray(array)) {\r\n      // and it is not flat, there is no need to parse it\r\n      if(Array.isArray(array[0])) {\r\n        return array\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples and parse points as floats\r\n    for(var i = 0, len = array.length; i < len; i = i + 2)\r\n      points.push([ array[i], array[i+1] ])\r\n\r\n    return points\r\n  }\r\n  // Move point string\r\n, move: function(x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y))\r\n      for (var i = this.value.length - 1; i >= 0; i--)\r\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\r\n    return this\r\n  }\r\n  // Resize poly string\r\n, size: function(width, height) {\r\n    var i, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get bounding box of points\r\n, bbox: function() {\r\n    SVG.parser.poly.setAttribute('points', this.toString())\r\n\r\n    return SVG.parser.poly.getBBox()\r\n  }\r\n})\r\n\nvar pathHandlers = {\r\n  M: function(c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return ['M', p.x, p.y]\r\n  },\r\n  L: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['L', c[0], c[1]]\r\n  },\r\n  H: function(c, p) {\r\n    p.x = c[0]\r\n    return ['H', c[0]]\r\n  },\r\n  V: function(c, p) {\r\n    p.y = c[0]\r\n    return ['V', c[0]]\r\n  },\r\n  C: function(c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\r\n  },\r\n  S: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['S', c[0], c[1], c[2], c[3]]\r\n  },\r\n  Q: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['Q', c[0], c[1], c[2], c[3]]\r\n  },\r\n  T: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['T', c[0], c[1]]\r\n  },\r\n  Z: function(c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return ['Z']\r\n  },\r\n  A: function(c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\r\n  }\r\n}\r\n\r\nvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\r\n\r\nfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\r\n  pathHandlers[mlhvqtcsa[i]] = (function(i){\r\n    return function(c, p, p0) {\r\n      if(i == 'H') c[0] = c[0] + p.x\r\n      else if(i == 'V') c[0] = c[0] + p.y\r\n      else if(i == 'A'){\r\n        c[5] = c[5] + p.x,\r\n        c[6] = c[6] + p.y\r\n      }\r\n      else\r\n        for(var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j%2 ? p.y : p.x)\r\n        }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsa[i].toUpperCase())\r\n}\r\n\r\n// Path points array\r\nSVG.PathArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PathArray.prototype = new SVG.Array\r\nSVG.PathArray.prototype.constructor = SVG.PathArray\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    return arrayToString(this.value)\r\n  }\r\n  // Move path string\r\n, move: function(x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n        l = this.value[i][0]\r\n\r\n        if (l == 'M' || l == 'L' || l == 'T')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n\r\n        } else if (l == 'H')  {\r\n          this.value[i][1] += x\r\n\r\n        } else if (l == 'V')  {\r\n          this.value[i][1] += y\r\n\r\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n          this.value[i][3] += x\r\n          this.value[i][4] += y\r\n\r\n          if (l == 'C')  {\r\n            this.value[i][5] += x\r\n            this.value[i][6] += y\r\n          }\r\n\r\n        } else if (l == 'A')  {\r\n          this.value[i][6] += x\r\n          this.value[i][7] += y\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Resize path string\r\n, size: function(width, height) {\r\n    // get bounding box of current situation\r\n    var i, l, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      l = this.value[i][0]\r\n\r\n      if (l == 'M' || l == 'L' || l == 'T')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'H')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\r\n      } else if (l == 'V')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l == 'C')  {\r\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n\r\n      } else if (l == 'A')  {\r\n        // resize radii\r\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Test if the passed path array use the same path data commands as this path array\r\n, equalCommands: function(pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    equalCommands = this.value.length === pathArray.value.length\r\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\r\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  }\r\n  // Make path array morphable\r\n, morph: function(pathArray) {\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    if(this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get morphed path array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this.value\r\n      , destinationArray = this.destination.value\r\n      , array = [], pathArray = new SVG.PathArray()\r\n      , i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [sourceArray[i][0]]\r\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if(array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] != 0)\r\n        array[i][5] = +(array[i][5] != 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  }\r\n  // Absolutize and parse path to array\r\n, parse: function(array) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\r\n    // prepare for parsing\r\n    var i, x0, y0, s, seg, arr\r\n      , x = 0\r\n      , y = 0\r\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\r\n\r\n    if(typeof array == 'string'){\r\n\r\n      array = array\r\n        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\r\n        .trim()                                 // trim\r\n        .split(SVG.regex.delimiter)   // split into array\r\n\r\n    }else{\r\n      array = array.reduce(function(prev, curr){\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var arr = []\r\n      , p = new SVG.Point()\r\n      , p0 = new SVG.Point()\r\n      , index = 0\r\n      , len = array.length\r\n\r\n    do{\r\n      // Test if we have a path letter\r\n      if(SVG.regex.isPathLetter.test(array[index])){\r\n        s = array[index]\r\n        ++index\r\n      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      }else if(s == 'M'){\r\n        s = 'L'\r\n      }else if(s == 'm'){\r\n        s = 'l'\r\n      }\r\n\r\n      arr.push(pathHandlers[s].call(null,\r\n          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n          p, p0\r\n        )\r\n      )\r\n\r\n    }while(len > index)\r\n\r\n    return arr\r\n\r\n  }\r\n  // Get bounding box of path\r\n, bbox: function() {\r\n    SVG.parser.path.setAttribute('d', this.toString())\r\n\r\n    return SVG.parser.path.getBBox()\r\n  }\r\n\r\n})\r\n\n// Module for unit convertions\r\nSVG.Number = SVG.invent({\r\n  // Initialize\r\n  create: function(value, unit) {\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit  = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(SVG.regex.numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] == '%')\r\n          this.value /= 100\r\n        else if (unit[5] == 's')\r\n          this.value *= 1000\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n\r\n    } else {\r\n      if (value instanceof SVG.Number) {\r\n        this.value = value.valueOf()\r\n        this.unit  = value.unit\r\n      }\r\n    }\r\n\r\n  }\r\n  // Add methods\r\n, extend: {\r\n    // Stringalize\r\n    toString: function() {\r\n      return (\r\n        this.unit == '%' ?\r\n          ~~(this.value * 1e8) / 1e6:\r\n        this.unit == 's' ?\r\n          this.value / 1e3 :\r\n          this.value\r\n      ) + this.unit\r\n    }\r\n  , toJSON: function() {\r\n      return this.toString()\r\n    }\r\n  , // Convert to primitive\r\n    valueOf: function() {\r\n      return this.value\r\n    }\r\n    // Add number\r\n  , plus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this + number, this.unit || number.unit)\r\n    }\r\n    // Subtract number\r\n  , minus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this - number, this.unit || number.unit)\r\n    }\r\n    // Multiply number\r\n  , times: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this * number, this.unit || number.unit)\r\n    }\r\n    // Divide number\r\n  , divide: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this / number, this.unit || number.unit)\r\n    }\r\n    // Convert to different unit\r\n  , to: function(unit) {\r\n      var number = new SVG.Number(this)\r\n\r\n      if (typeof unit === 'string')\r\n        number.unit = unit\r\n\r\n      return number\r\n    }\r\n    // Make number morphable\r\n  , morph: function(number) {\r\n      this.destination = new SVG.Number(number)\r\n\r\n      if(number.relative) {\r\n        this.destination.value += this.value\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Get morphed number at given position\r\n  , at: function(pos) {\r\n      // Make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // Generate new morphed number\r\n      return new SVG.Number(this.destination)\r\n          .minus(this)\r\n          .times(pos)\r\n          .plus(this)\r\n    }\r\n\r\n  }\r\n})\r\n\n\r\nSVG.Element = SVG.invent({\r\n  // Initialize node\r\n  create: function(node) {\r\n    // make stroke value accessible dynamically\r\n    this._stroke = SVG.defaults.attrs.stroke\r\n    this._event = null\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    if (this.node = node) {\r\n      this.type = node.nodeName\r\n      this.node.instance = this\r\n\r\n      // store current attribute value\r\n      this._stroke = node.getAttribute('stroke') || this._stroke\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return this.attr('y', y)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n    }\r\n    // Move element to given x and y values\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Move element by its center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return this.attr('width', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('height', height)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .width(new SVG.Number(p.width))\r\n        .height(new SVG.Number(p.height))\r\n    }\r\n    // Clone element\r\n  , clone: function(parent, withData) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) parent.add(clone)\r\n      else this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Remove element\r\n  , remove: function() {\r\n      if (this.parent())\r\n        this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n    // Replace element\r\n  , replace: function(element) {\r\n      this.after(element).remove()\r\n\r\n      return element\r\n    }\r\n    // Add element to given container and return self\r\n  , addTo: function(parent) {\r\n      return parent.put(this)\r\n    }\r\n    // Add element to given container and return container\r\n  , putIn: function(parent) {\r\n      return parent.add(this)\r\n    }\r\n    // Get / set id\r\n  , id: function(id) {\r\n      return this.attr('id', id)\r\n    }\r\n    // Checks whether the given point inside the bounding box of the element\r\n  , inside: function(x, y) {\r\n      var box = this.bbox()\r\n\r\n      return x > box.x\r\n          && y > box.y\r\n          && x < box.x + box.width\r\n          && y < box.y + box.height\r\n    }\r\n    // Show element\r\n  , show: function() {\r\n      return this.style('display', '')\r\n    }\r\n    // Hide element\r\n  , hide: function() {\r\n      return this.style('display', 'none')\r\n    }\r\n    // Is element visible?\r\n  , visible: function() {\r\n      return this.style('display') != 'none'\r\n    }\r\n    // Return id on string conversion\r\n  , toString: function() {\r\n      return this.attr('id')\r\n    }\r\n    // Return array of classes on the node\r\n  , classes: function() {\r\n      var attr = this.attr('class')\r\n\r\n      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\r\n    }\r\n    // Return true if class exists on the node, false otherwise\r\n  , hasClass: function(name) {\r\n      return this.classes().indexOf(name) != -1\r\n    }\r\n    // Add class to the node\r\n  , addClass: function(name) {\r\n      if (!this.hasClass(name)) {\r\n        var array = this.classes()\r\n        array.push(name)\r\n        this.attr('class', array.join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove class from the node\r\n  , removeClass: function(name) {\r\n      if (this.hasClass(name)) {\r\n        this.attr('class', this.classes().filter(function(c) {\r\n          return c != name\r\n        }).join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Toggle the presence of a class on the node\r\n  , toggleClass: function(name) {\r\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n    }\r\n    // Get referenced element form attribute value\r\n  , reference: function(attr) {\r\n      return SVG.get(this.attr(attr))\r\n    }\r\n    // Returns the parent element instance\r\n  , parent: function(type) {\r\n      var parent = this\r\n\r\n      // check for parent\r\n      if(!parent.node.parentNode) return null\r\n\r\n      // get parent element\r\n      parent = SVG.adopt(parent.node.parentNode)\r\n\r\n      if(!type) return parent\r\n\r\n      // loop trough ancestors if type is given\r\n      while(parent && parent.node instanceof window.SVGElement){\r\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n        if(parent.node.parentNode.nodeName == '#document') return null // #720\r\n        parent = SVG.adopt(parent.node.parentNode)\r\n      }\r\n    }\r\n    // Get parent document\r\n  , doc: function() {\r\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n    }\r\n    // return array of all ancestors of given type up to the root svg\r\n  , parents: function(type) {\r\n      var parents = [], parent = this\r\n\r\n      do{\r\n        parent = parent.parent(type)\r\n        if(!parent || !parent.node) break\r\n\r\n        parents.push(parent)\r\n      } while(parent.parent)\r\n\r\n      return parents\r\n    }\r\n    // matches the element vs a css selector\r\n  , matches: function(selector){\r\n      return matches(this.node, selector)\r\n    }\r\n    // Returns the svg node to call native svg methods on it\r\n  , native: function() {\r\n      return this.node\r\n    }\r\n    // Import raw svg\r\n  , svg: function(svg) {\r\n      // create temporary holder\r\n      var well = document.createElement('svg')\r\n\r\n      // act as a setter if svg is given\r\n      if (svg && this instanceof SVG.Parent) {\r\n        // dump raw svg\r\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<(\\w+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n        // transplant nodes\r\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n          this.node.appendChild(well.firstChild.firstChild)\r\n\r\n      // otherwise act as a getter\r\n      } else {\r\n        // create a wrapping svg element in case of partial content\r\n        well.appendChild(svg = document.createElement('svg'))\r\n\r\n        // write svgjs data to the dom\r\n        this.writeDataToDom()\r\n\r\n        // insert a copy of this node\r\n        svg.appendChild(this.node.cloneNode(true))\r\n\r\n        // return target element\r\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n      }\r\n\r\n      return this\r\n    }\r\n  // write svgjs data to the dom\r\n  , writeDataToDom: function() {\r\n\r\n      // dump variables recursively\r\n      if(this.each || this.lines){\r\n        var fn = this.each ? this : this.lines();\r\n        fn.each(function(){\r\n          this.writeDataToDom()\r\n        })\r\n      }\r\n\r\n      // remove previously set data\r\n      this.node.removeAttribute('svgjs:data')\r\n\r\n      if(Object.keys(this.dom).length)\r\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n\r\n      return this\r\n    }\r\n  // set given data to the elements data property\r\n  , setData: function(o){\r\n      this.dom = o\r\n      return this\r\n    }\r\n  , is: function(obj){\r\n      return is(this, obj)\r\n    }\r\n  }\r\n})\r\n\nSVG.easing = {\r\n  '-': function(pos){return pos}\r\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\r\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\r\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\r\n}\r\n\r\nSVG.morph = function(pos){\r\n  return function(from, to) {\r\n    return new SVG.MorphObj(from, to).at(pos)\r\n  }\r\n}\r\n\r\nSVG.Situation = SVG.invent({\r\n\r\n  create: function(o){\r\n    this.init = false\r\n    this.reversed = false\r\n    this.reversing = false\r\n\r\n    this.duration = new SVG.Number(o.duration).valueOf()\r\n    this.delay = new SVG.Number(o.delay).valueOf()\r\n\r\n    this.start = +new Date() + this.delay\r\n    this.finish = this.start + this.duration\r\n    this.ease = o.ease\r\n\r\n    // this.loop is incremented from 0 to this.loops\r\n    // it is also incremented when in an infinite loop (when this.loops is true)\r\n    this.loop = 0\r\n    this.loops = false\r\n\r\n    this.animations = {\r\n      // functionToCall: [list of morphable objects]\r\n      // e.g. move: [SVG.Number, SVG.Number]\r\n    }\r\n\r\n    this.attrs = {\r\n      // holds all attributes which are not represented from a function svg.js provides\r\n      // e.g. someAttr: SVG.Number\r\n    }\r\n\r\n    this.styles = {\r\n      // holds all styles which should be animated\r\n      // e.g. fill-color: SVG.Color\r\n    }\r\n\r\n    this.transforms = [\r\n      // holds all transformations as transformation objects\r\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\r\n    ]\r\n\r\n    this.once = {\r\n      // functions to fire at a specific position\r\n      // e.g. \"0.5\": function foo(){}\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\n\r\nSVG.FX = SVG.invent({\r\n\r\n  create: function(element) {\r\n    this._target = element\r\n    this.situations = []\r\n    this.active = false\r\n    this.situation = null\r\n    this.paused = false\r\n    this.lastPos = 0\r\n    this.pos = 0\r\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\r\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\r\n    this.absPos = 0\r\n    this._speed = 1\r\n  }\r\n\r\n, extend: {\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n     * @param ease function || string Function which should be used for easing or easing keyword\r\n     * @param delay Number indicating the delay before the animation starts\r\n     * @return target || this\r\n     */\r\n    animate: function(o, ease, delay){\r\n\r\n      if(typeof o == 'object'){\r\n        ease = o.ease\r\n        delay = o.delay\r\n        o = o.duration\r\n      }\r\n\r\n      var situation = new SVG.Situation({\r\n        duration: o || 1000,\r\n        delay: delay || 0,\r\n        ease: SVG.easing[ease || '-'] || ease\r\n      })\r\n\r\n      this.queue(situation)\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * sets a delay before the next element of the queue is called\r\n     * @param delay Duration of delay in milliseconds\r\n     * @return this.target()\r\n     */\r\n  , delay: function(delay){\r\n      // The delay is performed by an empty situation with its duration\r\n      // attribute set to the duration of the delay\r\n      var situation = new SVG.Situation({\r\n        duration: delay,\r\n        delay: 0,\r\n        ease: SVG.easing['-']\r\n      })\r\n\r\n      return this.queue(situation)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param null || target SVG.Element which should be set as new target\r\n     * @return target || this\r\n     */\r\n  , target: function(target){\r\n      if(target && target instanceof SVG.Element){\r\n        this._target = target\r\n        return this\r\n      }\r\n\r\n      return this._target\r\n    }\r\n\r\n    // returns the absolute position at a given time\r\n  , timeToAbsPos: function(timestamp){\r\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\r\n    }\r\n\r\n    // returns the timestamp from a given absolute positon\r\n  , absPosToTime: function(absPos){\r\n      return this.situation.duration/this._speed * absPos + this.situation.start\r\n    }\r\n\r\n    // starts the animationloop\r\n  , startAnimFrame: function(){\r\n      this.stopAnimFrame()\r\n      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\r\n    }\r\n\r\n    // cancels the animationframe\r\n  , stopAnimFrame: function(){\r\n      window.cancelAnimationFrame(this.animationFrame)\r\n    }\r\n\r\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\r\n  , start: function(){\r\n      // dont start if already started\r\n      if(!this.active && this.situation){\r\n        this.active = true\r\n        this.startCurrent()\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // start the current situation\r\n  , startCurrent: function(){\r\n      this.situation.start = +new Date + this.situation.delay/this._speed\r\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\r\n      return this.initAnimations().step()\r\n    }\r\n\r\n    /**\r\n     * adds a function / Situation to the animation queue\r\n     * @param fn function / situation to add\r\n     * @return this\r\n     */\r\n  , queue: function(fn){\r\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\r\n        this.situations.push(fn)\r\n\r\n      if(!this.situation) this.situation = this.situations.shift()\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * pulls next element from the queue and execute it\r\n     * @return this\r\n     */\r\n  , dequeue: function(){\r\n      // stop current animation\r\n      this.stop()\r\n\r\n      // get next animation from queue\r\n      this.situation = this.situations.shift()\r\n\r\n      if(this.situation){\r\n        if(this.situation instanceof SVG.Situation) {\r\n          this.start()\r\n        } else {\r\n          // If it is not a SVG.Situation, then it is a function, we execute it\r\n          this.situation.call(this)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // updates all animations to the current state of the element\r\n    // this is important when one property could be changed from another property\r\n  , initAnimations: function() {\r\n      var i, j, source\r\n      var s = this.situation\r\n\r\n      if(s.init) return this\r\n\r\n      for(i in s.animations){\r\n        source = this.target()[i]()\r\n\r\n        if(!Array.isArray(source)) {\r\n          source = [source]\r\n        }\r\n\r\n        if(!Array.isArray(s.animations[i])) {\r\n          s.animations[i] = [s.animations[i]]\r\n        }\r\n\r\n        //if(s.animations[i].length > source.length) {\r\n        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\r\n        //}\r\n\r\n        for(j = source.length; j--;) {\r\n          // The condition is because some methods return a normal number instead\r\n          // of a SVG.Number\r\n          if(s.animations[i][j] instanceof SVG.Number)\r\n            source[j] = new SVG.Number(source[j])\r\n\r\n          s.animations[i][j] = source[j].morph(s.animations[i][j])\r\n        }\r\n      }\r\n\r\n      for(i in s.attrs){\r\n        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\r\n      }\r\n\r\n      for(i in s.styles){\r\n        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\r\n      }\r\n\r\n      s.initialTransformation = this.target().matrixify()\r\n\r\n      s.init = true\r\n      return this\r\n    }\r\n  , clearQueue: function(){\r\n      this.situations = []\r\n      return this\r\n    }\r\n  , clearCurrent: function(){\r\n      this.situation = null\r\n      return this\r\n    }\r\n    /** stops the animation immediately\r\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n     * @return this\r\n     */\r\n  , stop: function(jumpToEnd, clearQueue){\r\n      var active = this.active\r\n      this.active = false\r\n\r\n      if(clearQueue){\r\n        this.clearQueue()\r\n      }\r\n\r\n      if(jumpToEnd && this.situation){\r\n        // initialize the situation if it was not\r\n        !active && this.startCurrent()\r\n        this.atEnd()\r\n      }\r\n\r\n      this.stopAnimFrame()\r\n\r\n      return this.clearCurrent()\r\n    }\r\n\r\n    /** resets the element to the state where the current element has started\r\n     * @return this\r\n     */\r\n  , reset: function(){\r\n      if(this.situation){\r\n        var temp = this.situation\r\n        this.stop()\r\n        this.situation = temp\r\n        this.atStart()\r\n      }\r\n      return this\r\n    }\r\n\r\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\r\n  , finish: function(){\r\n\r\n      this.stop(true, false)\r\n\r\n      while(this.dequeue().situation && this.stop(true, false));\r\n\r\n      this.clearQueue().clearCurrent()\r\n\r\n      return this\r\n    }\r\n\r\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\r\n  , atStart: function() {\r\n      return this.at(0, true)\r\n    }\r\n\r\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\r\n  , atEnd: function() {\r\n      if (this.situation.loops === true) {\r\n        // If in a infinite loop, we end the current iteration\r\n        this.situation.loops = this.situation.loop + 1\r\n      }\r\n\r\n      if(typeof this.situation.loops == 'number') {\r\n        // If performing a finite number of loops, we go after all the loops\r\n        return this.at(this.situation.loops, true)\r\n      } else {\r\n        // If no loops, we just go at the end\r\n        return this.at(1, true)\r\n      }\r\n    }\r\n\r\n    // set the internal animation pointer to the specified position and updates the visualisation\r\n    // if isAbsPos is true, pos is treated as an absolute position\r\n  , at: function(pos, isAbsPos){\r\n      var durDivSpd = this.situation.duration/this._speed\r\n\r\n      this.absPos = pos\r\n      // If pos is not an absolute position, we convert it into one\r\n      if (!isAbsPos) {\r\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\r\n        this.absPos += this.situation.loop\r\n      }\r\n\r\n      this.situation.start = +new Date - this.absPos * durDivSpd\r\n      this.situation.finish = this.situation.start + durDivSpd\r\n\r\n      return this.step(true)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the speed of the animations\r\n     * @param speed null || Number The new speed of the animations\r\n     * @return Number || this\r\n     */\r\n  , speed: function(speed){\r\n      if (speed === 0) return this.pause()\r\n\r\n      if (speed) {\r\n        this._speed = speed\r\n        // We use an absolute position here so that speed can affect the delay before the animation\r\n        return this.at(this.absPos, true)\r\n      } else return this._speed\r\n    }\r\n\r\n    // Make loopable\r\n  , loop: function(times, reverse) {\r\n      var c = this.last()\r\n\r\n      // store total loops\r\n      c.loops = (times != null) ? times : true\r\n      c.loop = 0\r\n\r\n      if(reverse) c.reversing = true\r\n      return this\r\n    }\r\n\r\n    // pauses the animation\r\n  , pause: function(){\r\n      this.paused = true\r\n      this.stopAnimFrame()\r\n\r\n      return this\r\n    }\r\n\r\n    // unpause the animation\r\n  , play: function(){\r\n      if(!this.paused) return this\r\n      this.paused = false\r\n      // We use an absolute position here so that the delay before the animation can be paused\r\n      return this.at(this.absPos, true)\r\n    }\r\n\r\n    /**\r\n     * toggle or set the direction of the animation\r\n     * true sets direction to backwards while false sets it to forwards\r\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n     * @return this\r\n     */\r\n  , reverse: function(reversed){\r\n      var c = this.last()\r\n\r\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\r\n      else c.reversed = reversed\r\n\r\n      return this\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a float from 0-1 indicating the progress of the current animation\r\n     * @param eased Boolean indicating whether the returned position should be eased or not\r\n     * @return number\r\n     */\r\n  , progress: function(easeIt){\r\n      return easeIt ? this.situation.ease(this.pos) : this.pos\r\n    }\r\n\r\n    /**\r\n     * adds a callback function which is called when the current animation is finished\r\n     * @param fn Function which should be executed as callback\r\n     * @return number\r\n     */\r\n  , after: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function wrapper(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, c)\r\n              this.off('finished.fx', wrapper) // prevent memory leak\r\n            }\r\n          }\r\n\r\n      this.target().on('finished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // adds a callback which is called whenever one animation step is performed\r\n  , during: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\r\n            }\r\n          }\r\n\r\n      // see above\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.after(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls after ALL animations in the queue are finished\r\n  , afterAll: function(fn){\r\n      var wrapper = function wrapper(e){\r\n            fn.call(this)\r\n            this.off('allfinished.fx', wrapper)\r\n          }\r\n\r\n      // see above\r\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls on every animation step for all animations\r\n  , duringAll: function(fn){\r\n      var wrapper = function(e){\r\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\r\n          }\r\n\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.afterAll(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n  , last: function(){\r\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\r\n    }\r\n\r\n    // adds one property to the animations\r\n  , add: function(method, args, type){\r\n      this.last()[type || 'animations'][method] = args\r\n      return this._callStart()\r\n    }\r\n\r\n    /** perform one step of the animation\r\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n     *  @return this\r\n     */\r\n  , step: function(ignoreTime){\r\n\r\n      // convert current time to an absolute position\r\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\r\n\r\n      // This part convert an absolute position to a position\r\n      if(this.situation.loops !== false) {\r\n        var absPos, absPosInt, lastLoop\r\n\r\n        // If the absolute position is below 0, we just treat it as if it was 0\r\n        absPos = Math.max(this.absPos, 0)\r\n        absPosInt = Math.floor(absPos)\r\n\r\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\r\n          this.pos = absPos - absPosInt\r\n          lastLoop = this.situation.loop\r\n          this.situation.loop = absPosInt\r\n        } else {\r\n          this.absPos = this.situation.loops\r\n          this.pos = 1\r\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\r\n          lastLoop = this.situation.loop - 1\r\n          this.situation.loop = this.situation.loops\r\n        }\r\n\r\n        if(this.situation.reversing) {\r\n          // Toggle reversed if an odd number of loops as occured since the last call of step\r\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\r\n        }\r\n\r\n      } else {\r\n        // If there are no loop, the absolute position must not be above 1\r\n        this.absPos = Math.min(this.absPos, 1)\r\n        this.pos = this.absPos\r\n      }\r\n\r\n      // while the absolute position can be below 0, the position must not be below 0\r\n      if(this.pos < 0) this.pos = 0\r\n\r\n      if(this.situation.reversed) this.pos = 1 - this.pos\r\n\r\n\r\n      // apply easing\r\n      var eased = this.situation.ease(this.pos)\r\n\r\n      // call once-callbacks\r\n      for(var i in this.situation.once){\r\n        if(i > this.lastPos && i <= eased){\r\n          this.situation.once[i].call(this.target(), this.pos, eased)\r\n          delete this.situation.once[i]\r\n        }\r\n      }\r\n\r\n      // fire during callback with position, eased position and current situation as parameter\r\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\r\n\r\n      // the user may call stop or finish in the during callback\r\n      // so make sure that we still have a valid situation\r\n      if(!this.situation){\r\n        return this\r\n      }\r\n\r\n      // apply the actual animation to every property\r\n      this.eachAt()\r\n\r\n      // do final code when situation is finished\r\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\r\n\r\n        // stop animation callback\r\n        this.stopAnimFrame()\r\n\r\n        // fire finished callback with current situation as parameter\r\n        this.target().fire('finished', {fx:this, situation: this.situation})\r\n\r\n        if(!this.situations.length){\r\n          this.target().fire('allfinished')\r\n\r\n          // Recheck the length since the user may call animate in the afterAll callback\r\n          if(!this.situations.length){\r\n            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\r\n            this.active = false\r\n          }\r\n        }\r\n\r\n        // start next animation\r\n        if(this.active) this.dequeue()\r\n        else this.clearCurrent()\r\n\r\n      }else if(!this.paused && this.active){\r\n        // we continue animating when we are not at the end\r\n        this.startAnimFrame()\r\n      }\r\n\r\n      // save last eased position for once callback triggering\r\n      this.lastPos = eased\r\n      return this\r\n\r\n    }\r\n\r\n    // calculates the step for every property and calls block with it\r\n  , eachAt: function(){\r\n      var i, len, at, self = this, target = this.target(), s = this.situation\r\n\r\n      // apply animations which can be called trough a method\r\n      for(i in s.animations){\r\n\r\n        at = [].concat(s.animations[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target[i].apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with attr()\r\n      for(i in s.attrs){\r\n\r\n        at = [i].concat(s.attrs[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.attr.apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with style()\r\n      for(i in s.styles){\r\n\r\n        at = [i].concat(s.styles[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.style.apply(target, at)\r\n\r\n      }\r\n\r\n      // animate initialTransformation which has to be chained\r\n      if(s.transforms.length){\r\n\r\n        // get initial initialTransformation\r\n        at = s.initialTransformation\r\n        for(i = 0, len = s.transforms.length; i < len; i++){\r\n\r\n          // get next transformation in chain\r\n          var a = s.transforms[i]\r\n\r\n          // multiply matrix directly\r\n          if(a instanceof SVG.Matrix){\r\n\r\n            if(a.relative){\r\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\r\n            }else{\r\n              at = at.morph(a).at(s.ease(this.pos))\r\n            }\r\n            continue\r\n          }\r\n\r\n          // when transformation is absolute we have to reset the needed transformation first\r\n          if(!a.relative)\r\n            a.undo(at.extract())\r\n\r\n          // and reapply it after\r\n          at = at.multiply(a.at(s.ease(this.pos)))\r\n\r\n        }\r\n\r\n        // set new matrix on element\r\n        target.matrix(at)\r\n      }\r\n\r\n      return this\r\n\r\n    }\r\n\r\n\r\n    // adds an once-callback which is called at a specific position and never again\r\n  , once: function(pos, fn, isEased){\r\n      var c = this.last()\r\n      if(!isEased) pos = c.ease(pos)\r\n\r\n      c.once[pos] = fn\r\n\r\n      return this\r\n    }\r\n\r\n  , _callStart: function() {\r\n      setTimeout(function(){this.start()}.bind(this), 0)\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n, parent: SVG.Element\r\n\r\n  // Add method to parent elements\r\n, construct: {\r\n    // Get fx module or create a new one, then animate with given duration and ease\r\n    animate: function(o, ease, delay) {\r\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\r\n    }\r\n  , delay: function(delay){\r\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\r\n    }\r\n  , stop: function(jumpToEnd, clearQueue) {\r\n      if (this.fx)\r\n        this.fx.stop(jumpToEnd, clearQueue)\r\n\r\n      return this\r\n    }\r\n  , finish: function() {\r\n      if (this.fx)\r\n        this.fx.finish()\r\n\r\n      return this\r\n    }\r\n    // Pause current animation\r\n  , pause: function() {\r\n      if (this.fx)\r\n        this.fx.pause()\r\n\r\n      return this\r\n    }\r\n    // Play paused current animation\r\n  , play: function() {\r\n      if (this.fx)\r\n        this.fx.play()\r\n\r\n      return this\r\n    }\r\n    // Set/Get the speed of the animations\r\n  , speed: function(speed) {\r\n      if (this.fx)\r\n        if (speed == null)\r\n          return this.fx.speed()\r\n        else\r\n          this.fx.speed(speed)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\n// MorphObj is used whenever no morphable object is given\r\nSVG.MorphObj = SVG.invent({\r\n\r\n  create: function(from, to){\r\n    // prepare color for morphing\r\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\r\n    // prepare value list for morphing\r\n    if(SVG.regex.delimiter.test(from)) return new SVG.Array(from).morph(to)\r\n    // prepare number for morphing\r\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\r\n\r\n    // prepare for plain morphing\r\n    this.value = from\r\n    this.destination = to\r\n  }\r\n\r\n, extend: {\r\n    at: function(pos, real){\r\n      return real < 1 ? this.value : this.destination\r\n    },\r\n\r\n    valueOf: function(){\r\n      return this.value\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  // Add animatable attributes\r\n  attr: function(a, v, relative) {\r\n    // apply attributes individually\r\n    if (typeof a == 'object') {\r\n      for (var key in a)\r\n        this.attr(key, a[key])\r\n\r\n    } else {\r\n      this.add(a, v, 'attrs')\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable styles\r\n, style: function(s, v) {\r\n    if (typeof s == 'object')\r\n      for (var key in s)\r\n        this.style(key, s[key])\r\n\r\n    else\r\n      this.add(s, v, 'styles')\r\n\r\n    return this\r\n  }\r\n  // Animatable x-axis\r\n, x: function(x, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({x:x}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(x)\r\n    num.relative = relative\r\n    return this.add('x', num)\r\n  }\r\n  // Animatable y-axis\r\n, y: function(y, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({y:y}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(y)\r\n    num.relative = relative\r\n    return this.add('y', num)\r\n  }\r\n  // Animatable center x-axis\r\n, cx: function(x) {\r\n    return this.add('cx', new SVG.Number(x))\r\n  }\r\n  // Animatable center y-axis\r\n, cy: function(y) {\r\n    return this.add('cy', new SVG.Number(y))\r\n  }\r\n  // Add animatable move\r\n, move: function(x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n  // Add animatable center\r\n, center: function(x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n  // Add animatable size\r\n, size: function(width, height) {\r\n    if (this.target() instanceof SVG.Text) {\r\n      // animate font size for Text elements\r\n      this.attr('font-size', width)\r\n\r\n    } else {\r\n      // animate bbox based size for all other elements\r\n      var box\r\n\r\n      if(!width || !height){\r\n        box = this.target().bbox()\r\n      }\r\n\r\n      if(!width){\r\n        width = box.width / box.height  * height\r\n      }\r\n\r\n      if(!height){\r\n        height = box.height / box.width  * width\r\n      }\r\n\r\n      this.add('width' , new SVG.Number(width))\r\n          .add('height', new SVG.Number(height))\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable width\r\n, width: function(width) {\r\n    return this.add('width', new SVG.Number(width))\r\n  }\r\n  // Add animatable height\r\n, height: function(height) {\r\n    return this.add('height', new SVG.Number(height))\r\n  }\r\n  // Add animatable plot\r\n, plot: function(a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if(arguments.length == 4) {\r\n      return this.plot([a, b, c, d])\r\n    }\r\n\r\n    return this.add('plot', new (this.target().morphArray)(a))\r\n  }\r\n  // Add leading method\r\n, leading: function(value) {\r\n    return this.target().leading ?\r\n      this.add('leading', new SVG.Number(value)) :\r\n      this\r\n  }\r\n  // Add animatable viewbox\r\n, viewbox: function(x, y, width, height) {\r\n    if (this.target() instanceof SVG.Container) {\r\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n    return this\r\n  }\r\n, update: function(o) {\r\n    if (this.target() instanceof SVG.Stop) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        return this.update({\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        })\r\n      }\r\n\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', o.offset)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n\nSVG.Box = SVG.invent({\r\n  create: function(x, y, width, height) {\r\n    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\r\n      // chromes getBoundingClientRect has no x and y property\r\n      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\r\n    } else if (arguments.length == 4) {\r\n      this.x = x\r\n      this.y = y\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n\r\n    // add center, right, bottom...\r\n    fullBox(this)\r\n  }\r\n, extend: {\r\n    // Merge rect box with another, return a new instance\r\n    merge: function(box) {\r\n      var b = new this.constructor()\r\n\r\n      // merge boxes\r\n      b.x      = Math.min(this.x, box.x)\r\n      b.y      = Math.min(this.y, box.y)\r\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\r\n      return fullBox(b)\r\n    }\r\n\r\n  , transform: function(m) {\r\n      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\r\n\r\n      var pts = [\r\n        new SVG.Point(this.x, this.y),\r\n        new SVG.Point(this.x2, this.y),\r\n        new SVG.Point(this.x, this.y2),\r\n        new SVG.Point(this.x2, this.y2)\r\n      ]\r\n\r\n      pts.forEach(function(p) {\r\n        p = p.transform(m)\r\n        xMin = Math.min(xMin,p.x)\r\n        xMax = Math.max(xMax,p.x)\r\n        yMin = Math.min(yMin,p.y)\r\n        yMax = Math.max(yMax,p.y)\r\n      })\r\n\r\n      bbox = new this.constructor()\r\n      bbox.x = xMin\r\n      bbox.width = xMax-xMin\r\n      bbox.y = yMin\r\n      bbox.height = yMax-yMin\r\n\r\n      fullBox(bbox)\r\n\r\n      return bbox\r\n    }\r\n  }\r\n})\r\n\r\nSVG.BBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    // get values if element is given\r\n    if (element instanceof SVG.Element) {\r\n      var box\r\n\r\n      // yes this is ugly, but Firefox can be a bitch when it comes to elements that are not yet rendered\r\n      try {\r\n\r\n        if (!document.documentElement.contains){\r\n          // This is IE - it does not support contains() for top-level SVGs\r\n          var topParent = element.node\r\n          while (topParent.parentNode){\r\n            topParent = topParent.parentNode\r\n          }\r\n          if (topParent != document) throw new Exception('Element not in the dom')\r\n        } else {\r\n          // the element is NOT in the dom, throw error\r\n          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\r\n        }\r\n\r\n        // find native bbox\r\n        box = element.node.getBBox()\r\n      } catch(e) {\r\n        if(element instanceof SVG.Shape){\r\n          var clone = element.clone(SVG.parser.draw.instance).show()\r\n          box = clone.node.getBBox()\r\n          clone.remove()\r\n        }else{\r\n          box = {\r\n            x:      element.node.clientLeft\r\n          , y:      element.node.clientTop\r\n          , width:  element.node.clientWidth\r\n          , height: element.node.clientHeight\r\n          }\r\n        }\r\n      }\r\n\r\n      SVG.Box.call(this, box)\r\n    }\r\n\r\n  }\r\n\r\n  // Define ancestor\r\n, inherit: SVG.Box\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get bounding box\r\n    bbox: function() {\r\n      return new SVG.BBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.BBox.prototype.constructor = SVG.BBox\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  tbox: function(){\r\n    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\r\n    return this.rbox(this.doc())\r\n  }\r\n})\r\n\r\nSVG.RBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    if (element instanceof SVG.Element) {\r\n      SVG.Box.call(this, element.node.getBoundingClientRect())\r\n    }\r\n  }\r\n\r\n, inherit: SVG.Box\r\n\r\n  // define Parent\r\n, parent: SVG.Element\r\n\r\n, extend: {\r\n    addOffset: function() {\r\n      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n      this.x += window.pageXOffset\r\n      this.y += window.pageYOffset\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get rect box\r\n    rbox: function(el) {\r\n      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\r\n      return new SVG.RBox(this).addOffset()\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.RBox.prototype.constructor = SVG.RBox\r\n\nSVG.Matrix = SVG.invent({\r\n  // Initialize\r\n  create: function(source) {\r\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\r\n    // ensure source as object\r\n    source = source instanceof SVG.Element ?\r\n      source.matrixify() :\r\n    typeof source === 'string' ?\r\n      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\r\n    arguments.length == 6 ?\r\n      arrayToMatrix([].slice.call(arguments)) :\r\n    Array.isArray(source) ?\r\n      arrayToMatrix(source) :\r\n    typeof source === 'object' ?\r\n      source : base\r\n\r\n    // merge source\r\n    for (i = abcdef.length - 1; i >= 0; --i)\r\n      this[abcdef[i]] = source[abcdef[i]] != null ?\r\n        source[abcdef[i]] : base[abcdef[i]]\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Extract individual transformations\r\n    extract: function() {\r\n      // find delta transform points\r\n      var px    = deltaTransformPoint(this, 0, 1)\r\n        , py    = deltaTransformPoint(this, 1, 0)\r\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\r\n      return {\r\n        // translation\r\n        x:        this.e\r\n      , y:        this.f\r\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // skew\r\n      , skewX:    -skewX\r\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n        // scale\r\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // rotation\r\n      , rotation: skewX\r\n      , a: this.a\r\n      , b: this.b\r\n      , c: this.c\r\n      , d: this.d\r\n      , e: this.e\r\n      , f: this.f\r\n      , matrix: new SVG.Matrix(this)\r\n      }\r\n    }\r\n    // Clone matrix\r\n  , clone: function() {\r\n      return new SVG.Matrix(this)\r\n    }\r\n    // Morph one matrix into another\r\n  , morph: function(matrix) {\r\n      // store new destination\r\n      this.destination = new SVG.Matrix(matrix)\r\n\r\n      return this\r\n    }\r\n    // Get morphed matrix at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var matrix = new SVG.Matrix({\r\n        a: this.a + (this.destination.a - this.a) * pos\r\n      , b: this.b + (this.destination.b - this.b) * pos\r\n      , c: this.c + (this.destination.c - this.c) * pos\r\n      , d: this.d + (this.destination.d - this.d) * pos\r\n      , e: this.e + (this.destination.e - this.e) * pos\r\n      , f: this.f + (this.destination.f - this.f) * pos\r\n      })\r\n\r\n      return matrix\r\n    }\r\n    // Multiplies by given matrix\r\n  , multiply: function(matrix) {\r\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n    }\r\n    // Inverses matrix\r\n  , inverse: function() {\r\n      return new SVG.Matrix(this.native().inverse())\r\n    }\r\n    // Translate matrix\r\n  , translate: function(x, y) {\r\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n    }\r\n    // Scale matrix\r\n  , scale: function(x, y, cx, cy) {\r\n      // support uniformal scale\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n    }\r\n    // Rotate matrix\r\n  , rotate: function(r, cx, cy) {\r\n      // convert degrees to radians\r\n      r = SVG.utils.radians(r)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n    }\r\n    // Flip matrix on x or y, at a given offset\r\n  , flip: function(a, o) {\r\n      return a == 'x' ?\r\n          this.scale(-1, 1, o, 0) :\r\n        a == 'y' ?\r\n          this.scale(1, -1, 0, o) :\r\n          this.scale(-1, -1, a, o != null ? o : a)\r\n    }\r\n    // Skew\r\n  , skew: function(x, y, cx, cy) {\r\n      // support uniformal skew\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      // convert degrees to radians\r\n      x = SVG.utils.radians(x)\r\n      y = SVG.utils.radians(y)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\r\n    }\r\n    // SkewX\r\n  , skewX: function(x, cx, cy) {\r\n      return this.skew(x, 0, cx, cy)\r\n    }\r\n    // SkewY\r\n  , skewY: function(y, cx, cy) {\r\n      return this.skew(0, y, cx, cy)\r\n    }\r\n    // Transform around a center point\r\n  , around: function(cx, cy, matrix) {\r\n      return this\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n        .multiply(matrix)\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n    }\r\n    // Convert to native SVGMatrix\r\n  , native: function() {\r\n      // create new matrix\r\n      var matrix = SVG.parser.native.createSVGMatrix()\r\n\r\n      // update with current values\r\n      for (var i = abcdef.length - 1; i >= 0; i--)\r\n        matrix[abcdef[i]] = this[abcdef[i]]\r\n\r\n      return matrix\r\n    }\r\n    // Convert matrix to string\r\n  , toString: function() {\r\n      return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n    }\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Element\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Get current matrix\r\n    ctm: function() {\r\n      return new SVG.Matrix(this.node.getCTM())\r\n    },\r\n    // Get current screen matrix\r\n    screenCTM: function() {\r\n      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n         This is needed because FF does not return the transformation matrix\r\n         for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n         However all other Browsers do that */\r\n      if(this instanceof SVG.Nested) {\r\n        var rect = this.rect(1,1)\r\n        var m = rect.node.getScreenCTM()\r\n        rect.remove()\r\n        return new SVG.Matrix(m)\r\n      }\r\n      return new SVG.Matrix(this.node.getScreenCTM())\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\nSVG.Point = SVG.invent({\r\n  // Initialize\r\n  create: function(x,y) {\r\n    var i, source, base = {x:0, y:0}\r\n\r\n    // ensure source as object\r\n    source = Array.isArray(x) ?\r\n      {x:x[0], y:x[1]} :\r\n    typeof x === 'object' ?\r\n      {x:x.x, y:x.y} :\r\n    x != null ?\r\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\r\n\r\n    // merge source\r\n    this.x = source.x\r\n    this.y = source.y\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Clone point\r\n    clone: function() {\r\n      return new SVG.Point(this)\r\n    }\r\n    // Morph one point into another\r\n  , morph: function(x, y) {\r\n      // store new destination\r\n      this.destination = new SVG.Point(x, y)\r\n\r\n      return this\r\n    }\r\n    // Get morphed point at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var point = new SVG.Point({\r\n        x: this.x + (this.destination.x - this.x) * pos\r\n      , y: this.y + (this.destination.y - this.y) * pos\r\n      })\r\n\r\n      return point\r\n    }\r\n    // Convert to native SVGPoint\r\n  , native: function() {\r\n      // create new point\r\n      var point = SVG.parser.native.createSVGPoint()\r\n\r\n      // update with current values\r\n      point.x = this.x\r\n      point.y = this.y\r\n\r\n      return point\r\n    }\r\n    // transform point with matrix\r\n  , transform: function(matrix) {\r\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n\r\n  // Get point\r\n  point: function(x, y) {\r\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Set svg element attribute\r\n  attr: function(a, v, n) {\r\n    // act as full getter\r\n    if (a == null) {\r\n      // get an object of attributes\r\n      a = {}\r\n      v = this.node.attributes\r\n      for (n = v.length - 1; n >= 0; n--)\r\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\r\n      return a\r\n\r\n    } else if (typeof a == 'object') {\r\n      // apply every attribute individually if an object is passed\r\n      for (v in a) this.attr(v, a[v])\r\n\r\n    } else if (v === null) {\r\n        // remove value\r\n        this.node.removeAttribute(a)\r\n\r\n    } else if (v == null) {\r\n      // act as a getter if the first and only argument is not an object\r\n      v = this.node.getAttribute(a)\r\n      return v == null ?\r\n        SVG.defaults.attrs[a] :\r\n      SVG.regex.isNumber.test(v) ?\r\n        parseFloat(v) : v\r\n\r\n    } else {\r\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n      if (a == 'stroke-width')\r\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n      else if (a == 'stroke')\r\n        this._stroke = v\r\n\r\n      // convert image fill and stroke to patterns\r\n      if (a == 'fill' || a == 'stroke') {\r\n        if (SVG.regex.isImage.test(v))\r\n          v = this.doc().defs().image(v, 0, 0)\r\n\r\n        if (v instanceof SVG.Image)\r\n          v = this.doc().defs().pattern(0, 0, function() {\r\n            this.add(v)\r\n          })\r\n      }\r\n\r\n      // ensure correct numeric values (also accepts NaN and Infinity)\r\n      if (typeof v === 'number')\r\n        v = new SVG.Number(v)\r\n\r\n      // ensure full hex color\r\n      else if (SVG.Color.isColor(v))\r\n        v = new SVG.Color(v)\r\n\r\n      // parse array values\r\n      else if (Array.isArray(v))\r\n        v = new SVG.Array(v)\r\n\r\n      // if the passed attribute is leading...\r\n      if (a == 'leading') {\r\n        // ... call the leading method instead\r\n        if (this.leading)\r\n          this.leading(v)\r\n      } else {\r\n        // set given attribute on node\r\n        typeof n === 'string' ?\r\n          this.node.setAttributeNS(n, a, v.toString()) :\r\n          this.node.setAttribute(a, v.toString())\r\n      }\r\n\r\n      // rebuild if required\r\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n        this.rebuild(a, v)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Add transformations\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // get current matrix\r\n    matrix = new SVG.Matrix(target)\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.multiply(new SVG.Matrix(o)) :\r\n        // absolute\r\n        new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.rotate(o.rotation, o.cx, o.cy) :\r\n        // absolute\r\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      if (!relative) {\r\n        // absolute; multiply inversed values\r\n        var e = matrix.extract()\r\n        o.scaleX = o.scaleX * 1 / e.scaleX\r\n        o.scaleY = o.scaleY * 1 / e.scaleY\r\n      }\r\n\r\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\r\n\r\n      if (!relative) {\r\n        // absolute; reset skew values\r\n        var e = matrix.extract()\r\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n      }\r\n\r\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      if (relative) {\r\n        // relative\r\n        matrix = matrix.translate(o.x, o.y)\r\n      } else {\r\n        // absolute\r\n        if (o.x != null) matrix.e = o.x\r\n        if (o.y != null) matrix.f = o.y\r\n      }\r\n    }\r\n\r\n    return this.attr('transform', matrix)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this.target()\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skewY != null ? o.skewY : 0\r\n\r\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      matrix = new SVG.Translate(o.x, o.y)\r\n    }\r\n\r\n    if(!matrix) return this\r\n\r\n    matrix.relative = relative\r\n\r\n    this.last().transforms.push(matrix)\r\n\r\n    return this._callStart()\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Reset all transformations\r\n  untransform: function() {\r\n    return this.attr('transform', null)\r\n  },\r\n  // merge the whole transformation chain into one matrix and returns it\r\n  matrixify: function() {\r\n\r\n    var matrix = (this.attr('transform') || '')\r\n      // split transformations\r\n      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\r\n        // generate key => value pairs\r\n        var kv = str.trim().split('(')\r\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\r\n      })\r\n      // merge every transformation into one matrix\r\n      .reduce(function(matrix, transform){\r\n\r\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n        return matrix[transform[0]].apply(matrix, transform[1])\r\n\r\n      }, new SVG.Matrix())\r\n\r\n    return matrix\r\n  },\r\n  // add an element to another parent without changing the visual representation on the screen\r\n  toParent: function(parent) {\r\n    if(this == parent) return this\r\n    var ctm = this.screenCTM()\r\n    var pCtm = parent.screenCTM().inverse()\r\n\r\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n    return this\r\n  },\r\n  // same as above with parent equals root-svg\r\n  toDoc: function() {\r\n    return this.toParent(this.doc())\r\n  }\r\n\r\n})\r\n\r\nSVG.Transformation = SVG.invent({\r\n\r\n  create: function(source, inversed){\r\n\r\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\r\n      return this.constructor.call(this, [].slice.call(arguments))\r\n    }\r\n\r\n    if(Array.isArray(source)){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[i]\r\n      }\r\n    } else if(typeof source == 'object'){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[this.arguments[i]]\r\n      }\r\n    }\r\n\r\n    this.inversed = false\r\n\r\n    if(inversed === true){\r\n      this.inversed = true\r\n    }\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    arguments: []\r\n  , method: ''\r\n\r\n  , at: function(pos){\r\n\r\n      var params = []\r\n\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        params.push(this[this.arguments[i]])\r\n      }\r\n\r\n      var m = this._undo || new SVG.Matrix()\r\n\r\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\r\n\r\n      return this.inversed ? m.inverse() : m\r\n\r\n    }\r\n\r\n  , undo: function(o){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\r\n      }\r\n\r\n      // The method SVG.Matrix.extract which was used before calling this\r\n      // method to obtain a value for the parameter o doesn't return a cx and\r\n      // a cy so we use the ones that were provided to this object at its creation\r\n      o.cx = this.cx\r\n      o.cy = this.cy\r\n\r\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.Translate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['transformedX', 'transformedY']\r\n  , method: 'translate'\r\n  }\r\n\r\n})\r\n\r\nSVG.Rotate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['rotation', 'cx', 'cy']\r\n  , method: 'rotate'\r\n  , at: function(pos){\r\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\r\n      return this.inversed ? m.inverse() : m\r\n    }\r\n  , undo: function(o){\r\n      this._undo = o\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Scale = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\r\n  , method: 'scale'\r\n  }\r\n\r\n})\r\n\r\nSVG.Skew = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\r\n  , method: 'skew'\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Dynamic style generator\r\n  style: function(s, v) {\r\n    if (arguments.length == 0) {\r\n      // get full style\r\n      return this.node.style.cssText || ''\r\n\r\n    } else if (arguments.length < 2) {\r\n      // apply every style individually if an object is passed\r\n      if (typeof s == 'object') {\r\n        for (v in s) this.style(v, s[v])\r\n\r\n      } else if (SVG.regex.isCss.test(s)) {\r\n        // parse css string\r\n        s = s.split(/\\s*;\\s*/)\r\n          // filter out suffix ; and stuff like ;;\r\n          .filter(function(e) { return !!e })\r\n          .map(function(e){ return e.split(/\\s*:\\s*/) })\r\n\r\n        // apply every definition individually\r\n        while (v = s.pop()) {\r\n          this.style(v[0], v[1])\r\n        }\r\n      } else {\r\n        // act as a getter if the first and only argument is not an object\r\n        return this.node.style[camelCase(s)]\r\n      }\r\n\r\n    } else {\r\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.Parent = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Returns all child elements\r\n    children: function() {\r\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n        return SVG.adopt(node)\r\n      })\r\n    }\r\n    // Add given element at a position\r\n  , add: function(element, i) {\r\n      if (i == null)\r\n        this.node.appendChild(element.node)\r\n      else if (element.node != this.node.childNodes[i])\r\n        this.node.insertBefore(element.node, this.node.childNodes[i])\r\n\r\n      return this\r\n    }\r\n    // Basically does the same as `add()` but returns the added element instead\r\n  , put: function(element, i) {\r\n      this.add(element, i)\r\n      return element\r\n    }\r\n    // Checks if the given element is a child\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // Gets index of given element\r\n  , index: function(element) {\r\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n    }\r\n    // Get a element at the given index\r\n  , get: function(i) {\r\n      return SVG.adopt(this.node.childNodes[i])\r\n    }\r\n    // Get first child\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get the last child\r\n  , last: function() {\r\n      return this.get(this.node.childNodes.length - 1)\r\n    }\r\n    // Iterates over all children and invokes a given block\r\n  , each: function(block, deep) {\r\n      var i, il\r\n        , children = this.children()\r\n\r\n      for (i = 0, il = children.length; i < il; i++) {\r\n        if (children[i] instanceof SVG.Element)\r\n          block.apply(children[i], [i, children])\r\n\r\n        if (deep && (children[i] instanceof SVG.Container))\r\n          children[i].each(block, deep)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove a given child\r\n  , removeElement: function(element) {\r\n      this.node.removeChild(element.node)\r\n\r\n      return this\r\n    }\r\n    // Remove all elements in this container\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      return this\r\n    }\r\n  , // Get defs\r\n    defs: function() {\r\n      return this.doc().defs()\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Parent, {\r\n\r\n  ungroup: function(parent, depth) {\r\n    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\r\n\r\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n    depth = depth || Infinity\r\n\r\n    this.each(function(){\r\n      if(this instanceof SVG.Defs) return this\r\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.node.firstChild || this.remove()\r\n\r\n    return this\r\n  },\r\n\r\n  flatten: function(parent, depth) {\r\n    return this.ungroup(parent, depth)\r\n  }\r\n\r\n})\nSVG.Container = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n})\n\r\nSVG.ViewBox = SVG.invent({\r\n\r\n  create: function(source) {\r\n    var i, base = [0, 0, 0, 0]\r\n\r\n    var x, y, width, height, box, view, we, he\r\n      , wm   = 1 // width multiplier\r\n      , hm   = 1 // height multiplier\r\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\r\n\r\n    if(source instanceof SVG.Element){\r\n\r\n      we = source\r\n      he = source\r\n      view = (source.attr('viewBox') || '').match(reg)\r\n      box = source.bbox\r\n\r\n      // get dimensions of current node\r\n      width  = new SVG.Number(source.width())\r\n      height = new SVG.Number(source.height())\r\n\r\n      // find nearest non-percentual dimensions\r\n      while (width.unit == '%') {\r\n        wm *= width.value\r\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n        we = we.parent()\r\n      }\r\n      while (height.unit == '%') {\r\n        hm *= height.value\r\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n        he = he.parent()\r\n      }\r\n\r\n      // ensure defaults\r\n      this.x      = 0\r\n      this.y      = 0\r\n      this.width  = width  * wm\r\n      this.height = height * hm\r\n      this.zoom   = 1\r\n\r\n      if (view) {\r\n        // get width and height from viewbox\r\n        x      = parseFloat(view[0])\r\n        y      = parseFloat(view[1])\r\n        width  = parseFloat(view[2])\r\n        height = parseFloat(view[3])\r\n\r\n        // calculate zoom accoring to viewbox\r\n        this.zoom = ((this.width / this.height) > (width / height)) ?\r\n          this.height / height :\r\n          this.width  / width\r\n\r\n        // calculate real pixel dimensions on parent SVG.Doc element\r\n        this.x      = x\r\n        this.y      = y\r\n        this.width  = width\r\n        this.height = height\r\n\r\n      }\r\n\r\n    }else{\r\n\r\n      // ensure source as object\r\n      source = typeof source === 'string' ?\r\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\r\n      Array.isArray(source) ?\r\n        source :\r\n      typeof source == 'object' ?\r\n        [source.x, source.y, source.width, source.height] :\r\n      arguments.length == 4 ?\r\n        [].slice.call(arguments) :\r\n        base\r\n\r\n      this.x = source[0]\r\n      this.y = source[1]\r\n      this.width = source[2]\r\n      this.height = source[3]\r\n    }\r\n\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    toString: function() {\r\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n    }\r\n  , morph: function(x, y, width, height){\r\n      this.destination = new SVG.ViewBox(x, y, width, height)\r\n      return this\r\n    }\r\n\r\n  , at: function(pos) {\r\n\r\n      if(!this.destination) return this\r\n\r\n      return new SVG.ViewBox([\r\n          this.x + (this.destination.x - this.x) * pos\r\n        , this.y + (this.destination.y - this.y) * pos\r\n        , this.width + (this.destination.width - this.width) * pos\r\n        , this.height + (this.destination.height - this.height) * pos\r\n      ])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n\r\n    // get/set viewbox\r\n    viewbox: function(x, y, width, height) {\r\n      if (arguments.length == 0)\r\n        // act as a getter if there are no arguments\r\n        return new SVG.ViewBox(this)\r\n\r\n      // otherwise act as a setter\r\n      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n  }\r\n\r\n})\n// Add events to elements\r\n;[  'click'\r\n  , 'dblclick'\r\n  , 'mousedown'\r\n  , 'mouseup'\r\n  , 'mouseover'\r\n  , 'mouseout'\r\n  , 'mousemove'\r\n  // , 'mouseenter' -> not supported by IE\r\n  // , 'mouseleave' -> not supported by IE\r\n  , 'touchstart'\r\n  , 'touchmove'\r\n  , 'touchleave'\r\n  , 'touchend'\r\n  , 'touchcancel' ].forEach(function(event) {\r\n\r\n  // add event to SVG.Element\r\n  SVG.Element.prototype[event] = function(f) {\r\n    // bind event to element rather than element node\r\n    SVG.on(this.node, event, f)\r\n    return this\r\n  }\r\n})\r\n\r\n// Initialize listeners stack\r\nSVG.listeners = []\r\nSVG.handlerMap = []\r\nSVG.listenerId = 0\r\n\r\n// Add event binder in the SVG namespace\r\nSVG.on = function(node, event, listener, binding, options) {\r\n  // create listener, get object-index\r\n  var l     = listener.bind(binding || node.instance || node)\r\n    , index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1\r\n    , ev    = event.split('.')[0]\r\n    , ns    = event.split('.')[1] || '*'\r\n\r\n\r\n  // ensure valid object\r\n  SVG.listeners[index]         = SVG.listeners[index]         || {}\r\n  SVG.listeners[index][ev]     = SVG.listeners[index][ev]     || {}\r\n  SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {}\r\n\r\n  if(!listener._svgjsListenerId)\r\n    listener._svgjsListenerId = ++SVG.listenerId\r\n\r\n  // reference listener\r\n  SVG.listeners[index][ev][ns][listener._svgjsListenerId] = l\r\n\r\n  // add listener\r\n  node.addEventListener(ev, l, options || false)\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nSVG.off = function(node, event, listener) {\r\n  var index = SVG.handlerMap.indexOf(node)\r\n    , ev    = event && event.split('.')[0]\r\n    , ns    = event && event.split('.')[1]\r\n    , namespace = ''\r\n\r\n  if(index == -1) return\r\n\r\n  if (listener) {\r\n    if(typeof listener == 'function') listener = listener._svgjsListenerId\r\n    if(!listener) return\r\n\r\n    // remove listener reference\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\r\n      // remove listener\r\n      node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false)\r\n\r\n      delete SVG.listeners[index][ev][ns || '*'][listener]\r\n    }\r\n\r\n  } else if (ns && ev) {\r\n    // remove all listeners for a namespaced event\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\r\n      for (listener in SVG.listeners[index][ev][ns])\r\n        SVG.off(node, [ev, ns].join('.'), listener)\r\n\r\n      delete SVG.listeners[index][ev][ns]\r\n    }\r\n\r\n  } else if (ns){\r\n    // remove all listeners for a specific namespace\r\n    for(event in SVG.listeners[index]){\r\n        for(namespace in SVG.listeners[index][event]){\r\n            if(ns === namespace){\r\n                SVG.off(node, [event, ns].join('.'))\r\n            }\r\n        }\r\n    }\r\n\r\n  } else if (ev) {\r\n    // remove all listeners for the event\r\n    if (SVG.listeners[index][ev]) {\r\n      for (namespace in SVG.listeners[index][ev])\r\n        SVG.off(node, [ev, namespace].join('.'))\r\n\r\n      delete SVG.listeners[index][ev]\r\n    }\r\n\r\n  } else {\r\n    // remove all listeners on a given node\r\n    for (event in SVG.listeners[index])\r\n      SVG.off(node, event)\r\n\r\n    delete SVG.listeners[index]\r\n    delete SVG.handlerMap[index]\r\n\r\n  }\r\n}\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Bind given event to listener\r\n  on: function(event, listener, binding, options) {\r\n    SVG.on(this.node, event, listener, binding, options)\r\n\r\n    return this\r\n  }\r\n  // Unbind event from listener\r\n, off: function(event, listener) {\r\n    SVG.off(this.node, event, listener)\r\n\r\n    return this\r\n  }\r\n  // Fire given event\r\n, fire: function(event, data) {\r\n\r\n    // Dispatch event\r\n    if(event instanceof window.Event){\r\n        this.node.dispatchEvent(event)\r\n    }else{\r\n        this.node.dispatchEvent(event = new window.CustomEvent(event, {detail:data, cancelable: true}))\r\n    }\r\n\r\n    this._event = event\r\n    return this\r\n  }\r\n, event: function() {\r\n    return this._event\r\n  }\r\n})\r\n\n\r\nSVG.Defs = SVG.invent({\r\n  // Initialize node\r\n  create: 'defs'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n})\nSVG.G = SVG.invent({\r\n  // Initialize node\r\n  create: 'g'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\r\n    }\r\n  , gbox: function() {\r\n\r\n      var bbox  = this.bbox()\r\n        , trans = this.transform()\r\n\r\n      bbox.x  += trans.x\r\n      bbox.x2 += trans.x\r\n      bbox.cx += trans.x\r\n\r\n      bbox.y  += trans.y\r\n      bbox.y2 += trans.y\r\n      bbox.cy += trans.y\r\n\r\n      return bbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a group element\r\n    group: function() {\r\n      return this.put(new SVG.G)\r\n    }\r\n  }\r\n})\r\n\n// ### This module adds backward / forward functionality to elements.\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Get all siblings, including myself\r\n  siblings: function() {\r\n    return this.parent().children()\r\n  }\r\n  // Get the curent position siblings\r\n, position: function() {\r\n    return this.parent().index(this)\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, next: function() {\r\n    return this.siblings()[this.position() + 1]\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, previous: function() {\r\n    return this.siblings()[this.position() - 1]\r\n  }\r\n  // Send given element one step forward\r\n, forward: function() {\r\n    var i = this.position() + 1\r\n      , p = this.parent()\r\n\r\n    // move node one step forward\r\n    p.removeElement(this).add(this, i)\r\n\r\n    // make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element one step backward\r\n, backward: function() {\r\n    var i = this.position()\r\n\r\n    if (i > 0)\r\n      this.parent().removeElement(this).add(this, i - 1)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the front\r\n, front: function() {\r\n    var p = this.parent()\r\n\r\n    // Move node forward\r\n    p.node.appendChild(this.node)\r\n\r\n    // Make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the back\r\n, back: function() {\r\n    if (this.position() > 0)\r\n      this.parent().removeElement(this).add(this, 0)\r\n\r\n    return this\r\n  }\r\n  // Inserts a given element before the targeted element\r\n, before: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i)\r\n\r\n    return this\r\n  }\r\n  // Insters a given element after the targeted element\r\n, after: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i + 1)\r\n\r\n    return this\r\n  }\r\n\r\n})\nSVG.Mask = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('mask'))\r\n\r\n    // keep references to masked elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unmask all masked elements and remove itself\r\n    remove: function() {\r\n      // unmask all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unmask()\r\n      this.targets = []\r\n\r\n      // remove mask from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create masking element\r\n    mask: function() {\r\n      return this.defs().put(new SVG.Mask)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Distribute mask to svg element\r\n  maskWith: function(element) {\r\n    // use given mask or create a new one\r\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.masker.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n  }\r\n  // Unmask element\r\n, unmask: function() {\r\n    delete this.masker\r\n    return this.attr('mask', null)\r\n  }\r\n\r\n})\r\n\nSVG.ClipPath = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('clipPath'))\r\n\r\n    // keep references to clipped elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unclip all clipped elements and remove itself\r\n    remove: function() {\r\n      // unclip all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unclip()\r\n      this.targets = []\r\n\r\n      // remove clipPath from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create clipping element\r\n    clip: function() {\r\n      return this.defs().put(new SVG.ClipPath)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Distribute clipPath to svg element\r\n  clipWith: function(element) {\r\n    // use given clip or create a new one\r\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.clipper.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n  }\r\n  // Unclip element\r\n, unclip: function() {\r\n    delete this.clipper\r\n    return this.attr('clip-path', null)\r\n  }\r\n\r\n})\nSVG.Gradient = SVG.invent({\r\n  // Initialize node\r\n  create: function(type) {\r\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\r\n    // store type\r\n    this.type = type\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add a color stop\r\n    at: function(offset, color, opacity) {\r\n      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n    }\r\n    // Update gradient\r\n  , update: function(block) {\r\n      // remove all stops\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'gradientTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create gradient element in defs\r\n    gradient: function(type, block) {\r\n      return this.defs().gradient(type, block)\r\n    }\r\n  }\r\n})\r\n\r\n// Add animatable methods to both gradient and fx module\r\nSVG.extend(SVG.Gradient, SVG.FX, {\r\n  // From position\r\n  from: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n  }\r\n  // To position\r\n, to: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n  }\r\n})\r\n\r\n// Base gradient generation\r\nSVG.extend(SVG.Defs, {\r\n  // define gradient\r\n  gradient: function(type, block) {\r\n    return this.put(new SVG.Gradient(type)).update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.Stop = SVG.invent({\r\n  // Initialize node\r\n  create: 'stop'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // add color stops\r\n    update: function(o) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        o = {\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        }\r\n      }\r\n\r\n      // set attributes\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Pattern = SVG.invent({\r\n  // Initialize node\r\n  create: 'pattern'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Return the fill id\r\n    fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Update pattern by rebuilding\r\n  , update: function(block) {\r\n      // remove content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'patternTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create pattern element in defs\r\n    pattern: function(width, height, block) {\r\n      return this.defs().pattern(width, height, block)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Define gradient\r\n  pattern: function(width, height, block) {\r\n    return this.put(new SVG.Pattern).update(block).attr({\r\n      x:            0\r\n    , y:            0\r\n    , width:        width\r\n    , height:       height\r\n    , patternUnits: 'userSpaceOnUse'\r\n    })\r\n  }\r\n\r\n})\nSVG.Doc = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    if (element) {\r\n      // ensure the presence of a dom element\r\n      element = typeof element == 'string' ?\r\n        document.getElementById(element) :\r\n        element\r\n\r\n      // If the target is an svg element, use that element as the main wrapper.\r\n      // This allows svg.js to work with svg documents as well.\r\n      if (element.nodeName == 'svg') {\r\n        this.constructor.call(this, element)\r\n      } else {\r\n        this.constructor.call(this, SVG.create('svg'))\r\n        element.appendChild(this.node)\r\n        this.size('100%', '100%')\r\n      }\r\n\r\n      // set svg element attributes and ensure defs node\r\n      this.namespace().defs()\r\n    }\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add namespaces\r\n    namespace: function() {\r\n      return this\r\n        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n    }\r\n    // Creates and returns defs element\r\n  , defs: function() {\r\n      if (!this._defs) {\r\n        var defs\r\n\r\n        // Find or create a defs element in this instance\r\n        if (defs = this.node.getElementsByTagName('defs')[0])\r\n          this._defs = SVG.adopt(defs)\r\n        else\r\n          this._defs = new SVG.Defs\r\n\r\n        // Make sure the defs node is at the end of the stack\r\n        this.node.appendChild(this._defs.node)\r\n      }\r\n\r\n      return this._defs\r\n    }\r\n    // custom parent method\r\n  , parent: function() {\r\n      return this.node.parentNode.nodeName == '#document' ? null : this.node.parentNode\r\n    }\r\n    // Fix for possible sub-pixel offset. See:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n  , spof: function() {\r\n      var pos = this.node.getScreenCTM()\r\n\r\n      if (pos)\r\n        this\r\n          .style('left', (-pos.e % 1) + 'px')\r\n          .style('top',  (-pos.f % 1) + 'px')\r\n\r\n      return this\r\n    }\r\n\r\n      // Removes the doc from the DOM\r\n  , remove: function() {\r\n      if(this.parent()) {\r\n        this.parent().removeChild(this.node)\r\n      }\r\n\r\n      return this\r\n    }\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      // add back parser\r\n      if(!SVG.parser.draw.parentNode)\r\n        this.node.appendChild(SVG.parser.draw)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Shape = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n})\n\r\nSVG.Bare = SVG.invent({\r\n  // Initialize\r\n  create: function(element, inherit) {\r\n    // construct element\r\n    this.constructor.call(this, SVG.create(element))\r\n\r\n    // inherit custom methods\r\n    if (inherit)\r\n      for (var method in inherit.prototype)\r\n        if (typeof inherit.prototype[method] === 'function')\r\n          this[method] = inherit.prototype[method]\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Insert some plain text\r\n    words: function(text) {\r\n      // remove contents\r\n      while (this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // create text node\r\n      this.node.appendChild(document.createTextNode(text))\r\n\r\n      return this\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Create an element that is not described by SVG.js\r\n  element: function(element, inherit) {\r\n    return this.put(new SVG.Bare(element, inherit))\r\n  }\r\n})\r\n\nSVG.Symbol = SVG.invent({\r\n  // Initialize node\r\n  create: 'symbol'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n, construct: {\r\n    // create symbol\r\n    symbol: function() {\r\n      return this.put(new SVG.Symbol)\r\n    }\r\n  }\r\n})\r\n\nSVG.Use = SVG.invent({\r\n  // Initialize node\r\n  create: 'use'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Use element as a reference\r\n    element: function(element, file) {\r\n      // Set lined element\r\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a use element\r\n    use: function(element, file) {\r\n      return this.put(new SVG.Use).element(element, file)\r\n    }\r\n  }\r\n})\nSVG.Rect = SVG.invent({\r\n  // Initialize node\r\n  create: 'rect'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a rect element\r\n    rect: function(width, height) {\r\n      return this.put(new SVG.Rect()).size(width, height)\r\n    }\r\n  }\r\n})\nSVG.Circle = SVG.invent({\r\n  // Initialize node\r\n  create: 'circle'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create circle element, based on ellipse\r\n    circle: function(size) {\r\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Circle, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n  // Alias radius x value\r\n, ry: function(ry) {\r\n    return this.rx(ry)\r\n  }\r\n})\r\n\r\nSVG.Ellipse = SVG.invent({\r\n  // Initialize node\r\n  create: 'ellipse'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create an ellipse\r\n    ellipse: function(width, height) {\r\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('rx', rx)\r\n  }\r\n  // Radius y value\r\n, ry: function(ry) {\r\n    return this.attr('ry', ry)\r\n  }\r\n})\r\n\r\n// Add common method\r\nSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n    }\r\n    // Custom size function\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .rx(new SVG.Number(p.width).divide(2))\r\n        .ry(new SVG.Number(p.height).divide(2))\r\n    }\r\n})\nSVG.Line = SVG.invent({\r\n  // Initialize node\r\n  create: 'line'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get array\r\n    array: function() {\r\n      return new SVG.PointArray([\r\n        [ this.attr('x1'), this.attr('y1') ]\r\n      , [ this.attr('x2'), this.attr('y2') ]\r\n      ])\r\n    }\r\n    // Overwrite native plot() method\r\n  , plot: function(x1, y1, x2, y2) {\r\n      if (x1 == null)\r\n        return this.array()\r\n      else if (typeof y1 !== 'undefined')\r\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n      else\r\n        x1 = new SVG.PointArray(x1).toLine()\r\n\r\n      return this.attr(x1)\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr(this.array().move(x, y).toLine())\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr(this.array().size(p.width, p.height).toLine())\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a line element\r\n    line: function(x1, y1, x2, y2) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\r\n      return SVG.Line.prototype.plot.apply(\r\n        this.put(new SVG.Line)\r\n      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\r\n      )\r\n    }\r\n  }\r\n})\r\n\nSVG.Polyline = SVG.invent({\r\n  // Initialize node\r\n  create: 'polyline'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polyline element\r\n    polyline: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.Polygon = SVG.invent({\r\n  // Initialize node\r\n  create: 'polygon'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polygon element\r\n    polygon: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\n// Add polygon-specific functions\r\nSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n  // Get array\r\n  array: function() {\r\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n  }\r\n  // Plot new path\r\n, plot: function(p) {\r\n    return (p == null) ?\r\n      this.array() :\r\n      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\r\n  }\r\n  // Clear array cache\r\n, clear: function() {\r\n    delete this._array\r\n    return this\r\n  }\r\n  // Move by left top corner\r\n, move: function(x, y) {\r\n    return this.attr('points', this.array().move(x, y))\r\n  }\r\n  // Set element size to given width and height\r\n, size: function(width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this.attr('points', this.array().size(p.width, p.height))\r\n  }\r\n\r\n})\r\n\n// unify all point to point elements\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n  // Define morphable array\r\n  morphArray:  SVG.PointArray\r\n  // Move by left top corner over x-axis\r\n, x: function(x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n  // Move by left top corner over y-axis\r\n, y: function(y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n  // Set width of element\r\n, width: function(width) {\r\n    var b = this.bbox()\r\n\r\n    return width == null ? b.width : this.size(width, b.height)\r\n  }\r\n  // Set height of element\r\n, height: function(height) {\r\n    var b = this.bbox()\r\n\r\n    return height == null ? b.height : this.size(b.width, height)\r\n  }\r\n})\nSVG.Path = SVG.invent({\r\n  // Initialize node\r\n  create: 'path'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Define morphable array\r\n    morphArray:  SVG.PathArray\r\n    // Get array\r\n  , array: function() {\r\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n    }\r\n    // Plot new path\r\n  , plot: function(d) {\r\n      return (d == null) ?\r\n        this.array() :\r\n        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\r\n    }\r\n    // Clear array cache\r\n  , clear: function() {\r\n      delete this._array\r\n      return this\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr('d', this.array().move(x, y))\r\n    }\r\n    // Move by left top corner over x-axis\r\n  , x: function(x) {\r\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n    }\r\n    // Move by left top corner over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr('d', this.array().size(p.width, p.height))\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped path element\r\n    path: function(d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\r\n    }\r\n  }\r\n})\r\n\nSVG.Image = SVG.invent({\r\n  // Initialize node\r\n  create: 'image'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // (re)load image\r\n    load: function(url) {\r\n      if (!url) return this\r\n\r\n      var self = this\r\n        , img  = new window.Image()\r\n\r\n      // preload image\r\n      SVG.on(img, 'load', function() {\r\n        var p = self.parent(SVG.Pattern)\r\n\r\n        if(p === null) return\r\n\r\n        // ensure image size\r\n        if (self.width() == 0 && self.height() == 0)\r\n          self.size(img.width, img.height)\r\n\r\n        // ensure pattern size if not set\r\n        if (p && p.width() == 0 && p.height() == 0)\r\n          p.size(self.width(), self.height())\r\n\r\n        // callback\r\n        if (typeof self._loaded === 'function')\r\n          self._loaded.call(self, {\r\n            width:  img.width\r\n          , height: img.height\r\n          , ratio:  img.width / img.height\r\n          , url:    url\r\n          })\r\n      })\r\n\r\n      SVG.on(img, 'error', function(e){\r\n        if (typeof self._error === 'function'){\r\n            self._error.call(self, e)\r\n        }\r\n      })\r\n\r\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n    }\r\n    // Add loaded callback\r\n  , loaded: function(loaded) {\r\n      this._loaded = loaded\r\n      return this\r\n    }\r\n\r\n  , error: function(error) {\r\n      this._error = error\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // create image element, load image and set its size\r\n    image: function(source, width, height) {\r\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n    }\r\n  }\r\n\r\n})\nSVG.Text = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('text'))\r\n\r\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n    this._rebuild = true                      // enable automatic updating of dy values\r\n    this._build   = false                     // disable build mode for adding multiple lines\r\n\r\n    // set default font\r\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      // act as getter\r\n      if (x == null)\r\n        return this.attr('x')\r\n\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      var oy = this.attr('y')\r\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\r\n      // act as getter\r\n      if (y == null)\r\n        return typeof oy === 'number' ? oy - o : oy\r\n\r\n      return this.attr('y', typeof y === 'number' ? y + o : y)\r\n    }\r\n    // Move center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n    }\r\n    // Move center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n    }\r\n    // Set the text content\r\n  , text: function(text) {\r\n      // act as getter\r\n      if (typeof text === 'undefined'){\r\n        var text = ''\r\n        var children = this.node.childNodes\r\n        for(var i = 0, len = children.length; i < len; ++i){\r\n\r\n          // add newline if its not the first child and newLined is set to true\r\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n            text += '\\n'\r\n          }\r\n\r\n          // add content of this node\r\n          text += children[i].textContent\r\n        }\r\n\r\n        return text\r\n      }\r\n\r\n      // remove existing content\r\n      this.clear().build(true)\r\n\r\n      if (typeof text === 'function') {\r\n        // call block\r\n        text.call(this, this)\r\n\r\n      } else {\r\n        // store text and make sure text is not blank\r\n        text = text.split('\\n')\r\n\r\n        // build new lines\r\n        for (var i = 0, il = text.length; i < il; i++)\r\n          this.tspan(text[i]).newLine()\r\n      }\r\n\r\n      // disable build mode and rebuild lines\r\n      return this.build(false).rebuild()\r\n    }\r\n    // Set font size\r\n  , size: function(size) {\r\n      return this.attr('font-size', size).rebuild()\r\n    }\r\n    // Set / get leading\r\n  , leading: function(value) {\r\n      // act as getter\r\n      if (value == null)\r\n        return this.dom.leading\r\n\r\n      // act as setter\r\n      this.dom.leading = new SVG.Number(value)\r\n\r\n      return this.rebuild()\r\n    }\r\n    // Get all the first level lines\r\n  , lines: function() {\r\n      var node = (this.textPath && this.textPath() || this).node\r\n\r\n      // filter tspans and map them to SVG.js instances\r\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\r\n        return SVG.adopt(el)\r\n      })\r\n\r\n      // return an instance of SVG.set\r\n      return new SVG.Set(lines)\r\n    }\r\n    // Rebuild appearance type\r\n  , rebuild: function(rebuild) {\r\n      // store new rebuild flag if given\r\n      if (typeof rebuild == 'boolean')\r\n        this._rebuild = rebuild\r\n\r\n      // define position of all lines\r\n      if (this._rebuild) {\r\n        var self = this\r\n          , blankLineOffset = 0\r\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\r\n        this.lines().each(function() {\r\n          if (this.dom.newLined) {\r\n            if (!self.textPath())\r\n              this.attr('x', self.attr('x'))\r\n            if(this.text() == '\\n') {\r\n              blankLineOffset += dy\r\n            }else{\r\n              this.attr('dy', dy + blankLineOffset)\r\n              blankLineOffset = 0\r\n            }\r\n          }\r\n        })\r\n\r\n        this.fire('rebuild')\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Enable / disable build mode\r\n  , build: function(build) {\r\n      this._build = !!build\r\n      return this\r\n    }\r\n    // overwrite method from parent to set data properly\r\n  , setData: function(o){\r\n      this.dom = o\r\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create text element\r\n    text: function(text) {\r\n      return this.put(new SVG.Text).text(text)\r\n    }\r\n    // Create plain text element\r\n  , plain: function(text) {\r\n      return this.put(new SVG.Text).plain(text)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Tspan = SVG.invent({\r\n  // Initialize node\r\n  create: 'tspan'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set text content\r\n    text: function(text) {\r\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n      return this\r\n    }\r\n    // Shortcut dx\r\n  , dx: function(dx) {\r\n      return this.attr('dx', dx)\r\n    }\r\n    // Shortcut dy\r\n  , dy: function(dy) {\r\n      return this.attr('dy', dy)\r\n    }\r\n    // Create new line\r\n  , newLine: function() {\r\n      // fetch text parent\r\n      var t = this.parent(SVG.Text)\r\n\r\n      // mark new line\r\n      this.dom.newLined = true\r\n\r\n      // apply new hy¡n\r\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Text, SVG.Tspan, {\r\n  // Create plain text node\r\n  plain: function(text) {\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // create text node\r\n    this.node.appendChild(document.createTextNode(text))\r\n\r\n    return this\r\n  }\r\n  // Create a tspan\r\n, tspan: function(text) {\r\n    var node  = (this.textPath && this.textPath() || this).node\r\n      , tspan = new SVG.Tspan\r\n\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // add new tspan\r\n    node.appendChild(tspan.node)\r\n\r\n    return tspan.text(text)\r\n  }\r\n  // Clear all lines\r\n, clear: function() {\r\n    var node = (this.textPath && this.textPath() || this).node\r\n\r\n    // remove existing child nodes\r\n    while (node.hasChildNodes())\r\n      node.removeChild(node.lastChild)\r\n\r\n    return this\r\n  }\r\n  // Get length of text element\r\n, length: function() {\r\n    return this.node.getComputedTextLength()\r\n  }\r\n})\r\n\nSVG.TextPath = SVG.invent({\r\n  // Initialize node\r\n  create: 'textPath'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n  // Define parent class\r\n, parent: SVG.Text\r\n\r\n  // Add parent method\r\n, construct: {\r\n    morphArray: SVG.PathArray\r\n    // Create path for text to run on\r\n  , path: function(d) {\r\n      // create textPath element\r\n      var path  = new SVG.TextPath\r\n        , track = this.doc().defs().path(d)\r\n\r\n      // move lines to textpath\r\n      while (this.node.hasChildNodes())\r\n        path.node.appendChild(this.node.firstChild)\r\n\r\n      // add textPath element as child node\r\n      this.node.appendChild(path.node)\r\n\r\n      // link textPath to path and add content\r\n      path.attr('href', '#' + track, SVG.xlink)\r\n\r\n      return this\r\n    }\r\n    // return the array of the path track element\r\n  , array: function() {\r\n      var track = this.track()\r\n\r\n      return track ? track.array() : null\r\n    }\r\n    // Plot path if any\r\n  , plot: function(d) {\r\n      var track = this.track()\r\n        , pathArray = null\r\n\r\n      if (track) {\r\n        pathArray = track.plot(d)\r\n      }\r\n\r\n      return (d == null) ? pathArray : this\r\n    }\r\n    // Get the path track element\r\n  , track: function() {\r\n      var path = this.textPath()\r\n\r\n      if (path)\r\n        return path.reference('href')\r\n    }\r\n    // Get the textPath child\r\n  , textPath: function() {\r\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n        return SVG.adopt(this.node.firstChild)\r\n    }\r\n  }\r\n})\r\n\nSVG.Nested = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('svg'))\r\n\r\n    this.style('overflow', 'visible')\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create nested svg document\r\n    nested: function() {\r\n      return this.put(new SVG.Nested)\r\n    }\r\n  }\r\n})\nSVG.A = SVG.invent({\r\n  // Initialize node\r\n  create: 'a'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Link url\r\n    to: function(url) {\r\n      return this.attr('href', url, SVG.xlink)\r\n    }\r\n    // Link show attribute\r\n  , show: function(target) {\r\n      return this.attr('show', target, SVG.xlink)\r\n    }\r\n    // Link target attribute\r\n  , target: function(target) {\r\n      return this.attr('target', target)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a hyperlink element\r\n    link: function(url) {\r\n      return this.put(new SVG.A).to(url)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Create a hyperlink element\r\n  linkTo: function(url) {\r\n    var link = new SVG.A\r\n\r\n    if (typeof url == 'function')\r\n      url.call(link, link)\r\n    else\r\n      link.to(url)\r\n\r\n    return this.parent().put(link).put(this)\r\n  }\r\n\r\n})\nSVG.Marker = SVG.invent({\r\n  // Initialize node\r\n  create: 'marker'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set width of element\r\n    width: function(width) {\r\n      return this.attr('markerWidth', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('markerHeight', height)\r\n    }\r\n    // Set marker refX and refY\r\n  , ref: function(x, y) {\r\n      return this.attr('refX', x).attr('refY', y)\r\n    }\r\n    // Update marker\r\n  , update: function(block) {\r\n      // remove all content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , toString: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    marker: function(width, height, block) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(width, height, block)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Create marker\r\n  marker: function(width, height, block) {\r\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n    return this.put(new SVG.Marker)\r\n      .size(width, height)\r\n      .ref(width / 2, height / 2)\r\n      .viewbox(0, 0, width, height)\r\n      .attr('orient', 'auto')\r\n      .update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n  // Create and attach markers\r\n  marker: function(marker, width, height, block) {\r\n    var attr = ['marker']\r\n\r\n    // Build attribute name\r\n    if (marker != 'all') attr.push(marker)\r\n    attr = attr.join('-')\r\n\r\n    // Set marker attribute\r\n    marker = arguments[1] instanceof SVG.Marker ?\r\n      arguments[1] :\r\n      this.doc().marker(width, height, block)\r\n\r\n    return this.attr(attr, marker)\r\n  }\r\n\r\n})\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n, fill:   ['color', 'opacity', 'rule']\r\n, prefix: function(t, a) {\r\n    return a == 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;['fill', 'stroke'].forEach(function(m) {\r\n  var i, extension = {}\r\n\r\n  extension[m] = function(o) {\r\n    if (typeof o == 'undefined')\r\n      return this\r\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n      this.attr(m, o)\r\n\r\n    else\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--)\r\n        if (o[sugar[m][i]] != null)\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\r\n    return this\r\n  }\r\n\r\n  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Map rotation to transform\r\n  rotate: function(d, cx, cy) {\r\n    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n  }\r\n  // Map skew to transform\r\n, skew: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ skew: x, cx: y, cy: cx }) :\r\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map scale to transform\r\n, scale: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ scale: x, cx: y, cy: cx }) :\r\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map translate to transform\r\n, translate: function(x, y) {\r\n    return this.transform({ x: x, y: y })\r\n  }\r\n  // Map flip to transform\r\n, flip: function(a, o) {\r\n    o = typeof a == 'number' ? a : o\r\n    return this.transform({ flip: a || 'both', offset: o })\r\n  }\r\n  // Map matrix to transform\r\n, matrix: function(m) {\r\n    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\r\n  }\r\n  // Opacity\r\n, opacity: function(value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n  // Relative move over x axis\r\n, dx: function(x) {\r\n    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\r\n  }\r\n  // Relative move over y axis\r\n, dy: function(y) {\r\n    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\r\n  }\r\n  // Relative move over x and y axes\r\n, dmove: function(x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n  // Add x and y radius\r\n  radius: function(x, y) {\r\n    var type = (this._target || this).type;\r\n    return type == 'radial' || type == 'circle' ?\r\n      this.attr('r', new SVG.Number(x)) :\r\n      this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Path, {\r\n  // Get path length\r\n  length: function() {\r\n    return this.node.getTotalLength()\r\n  }\r\n  // Get point at length\r\n, pointAt: function(length) {\r\n    return this.node.getPointAtLength(length)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\r\n  // Set font\r\n  font: function(a, v) {\r\n    if (typeof a == 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n    }\r\n\r\n    return a == 'leading' ?\r\n        this.leading(v) :\r\n      a == 'anchor' ?\r\n        this.attr('text-anchor', v) :\r\n      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\r\n        this.attr('font-'+ a, v) :\r\n        this.attr(a, v)\r\n  }\r\n})\r\n\nSVG.Set = SVG.invent({\r\n  // Initialize\r\n  create: function(members) {\r\n    // Set initial state\r\n    Array.isArray(members) ? this.members = members : this.clear()\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add element to set\r\n    add: function() {\r\n      var i, il, elements = [].slice.call(arguments)\r\n\r\n      for (i = 0, il = elements.length; i < il; i++)\r\n        this.members.push(elements[i])\r\n\r\n      return this\r\n    }\r\n    // Remove element from set\r\n  , remove: function(element) {\r\n      var i = this.index(element)\r\n\r\n      // remove given child\r\n      if (i > -1)\r\n        this.members.splice(i, 1)\r\n\r\n      return this\r\n    }\r\n    // Iterate over all members\r\n  , each: function(block) {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        block.apply(this.members[i], [i, this.members])\r\n\r\n      return this\r\n    }\r\n    // Restore to defaults\r\n  , clear: function() {\r\n      // initialize store\r\n      this.members = []\r\n\r\n      return this\r\n    }\r\n    // Get the length of a set\r\n  , length: function() {\r\n      return this.members.length\r\n    }\r\n    // Checks if a given element is present in set\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // retuns index of given element in set\r\n  , index: function(element) {\r\n      return this.members.indexOf(element)\r\n    }\r\n    // Get member at given index\r\n  , get: function(i) {\r\n      return this.members[i]\r\n    }\r\n    // Get first member\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get last member\r\n  , last: function() {\r\n      return this.get(this.members.length - 1)\r\n    }\r\n    // Default value\r\n  , valueOf: function() {\r\n      return this.members\r\n    }\r\n    // Get the bounding box of all members included or empty box if set has no items\r\n  , bbox: function(){\r\n      // return an empty box of there are no members\r\n      if (this.members.length == 0)\r\n        return new SVG.RBox()\r\n\r\n      // get the first rbox and update the target bbox\r\n      var rbox = this.members[0].rbox(this.members[0].doc())\r\n\r\n      this.each(function() {\r\n        // user rbox for correct position and visual representation\r\n        rbox = rbox.merge(this.rbox(this.doc()))\r\n      })\r\n\r\n      return rbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a new set\r\n    set: function(members) {\r\n      return new SVG.Set(members)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.FX.Set = SVG.invent({\r\n  // Initialize node\r\n  create: function(set) {\r\n    // store reference to set\r\n    this.set = set\r\n  }\r\n\r\n})\r\n\r\n// Alias methods\r\nSVG.Set.inherit = function() {\r\n  var m\r\n    , methods = []\r\n\r\n  // gather shape methods\r\n  for(var m in SVG.Shape.prototype)\r\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply shape aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n          this.members[i][method].apply(this.members[i], arguments)\r\n\r\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n    }\r\n  })\r\n\r\n  // clear methods for the next round\r\n  methods = []\r\n\r\n  // gather fx methods\r\n  for(var m in SVG.FX.prototype)\r\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply fx aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.FX.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\r\n      return this\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\n\r\nSVG.extend(SVG.Element, {\r\n  // Store data values on svg nodes\r\n  data: function(a, v, r) {\r\n    if (typeof a == 'object') {\r\n      for (v in a)\r\n        this.data(v, a[v])\r\n\r\n    } else if (arguments.length < 2) {\r\n      try {\r\n        return JSON.parse(this.attr('data-' + a))\r\n      } catch(e) {\r\n        return this.attr('data-' + a)\r\n      }\r\n\r\n    } else {\r\n      this.attr(\r\n        'data-' + a\r\n      , v === null ?\r\n          null :\r\n        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n          v :\r\n          JSON.stringify(v)\r\n      )\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Remember arbitrary data\r\n  remember: function(k, v) {\r\n    // remember every item in an object individually\r\n    if (typeof arguments[0] == 'object')\r\n      for (var v in k)\r\n        this.remember(v, k[v])\r\n\r\n    // retrieve memory\r\n    else if (arguments.length == 1)\r\n      return this.memory()[k]\r\n\r\n    // store memory\r\n    else\r\n      this.memory()[k] = v\r\n\r\n    return this\r\n  }\r\n\r\n  // Erase a given memory\r\n, forget: function() {\r\n    if (arguments.length == 0)\r\n      this._memory = {}\r\n    else\r\n      for (var i = arguments.length - 1; i >= 0; i--)\r\n        delete this.memory()[arguments[i]]\r\n\r\n    return this\r\n  }\r\n\r\n  // Initialize or return local memory object\r\n, memory: function() {\r\n    return this._memory || (this._memory = {})\r\n  }\r\n\r\n})\n// Method for getting an element by id\r\nSVG.get = function(id) {\r\n  var node = document.getElementById(idFromReference(id) || id)\r\n  return SVG.adopt(node)\r\n}\r\n\r\n// Select elements by query string\r\nSVG.select = function(query, parent) {\r\n  return new SVG.Set(\r\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n      return SVG.adopt(node)\r\n    })\r\n  )\r\n}\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Scoped select method\r\n  select: function(query) {\r\n    return SVG.select(query, this.node)\r\n  }\r\n\r\n})\nfunction pathRegReplace(a, b, c, d) {\r\n  return c + d.replace(SVG.regex.dots, ' .')\r\n}\r\n\r\n// creates deep clone of array\r\nfunction array_clone(arr){\r\n  var clone = arr.slice(0)\r\n  for(var i = clone.length; i--;){\r\n    if(Array.isArray(clone[i])){\r\n      clone[i] = array_clone(clone[i])\r\n    }\r\n  }\r\n  return clone\r\n}\r\n\r\n// tests if a given element is instance of an object\r\nfunction is(el, obj){\r\n  return el instanceof obj\r\n}\r\n\r\n// tests if a given selector matches an element\r\nfunction matches(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nfunction camelCase(s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nfunction capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Ensure to six-based hex\r\nfunction fullHex(hex) {\r\n  return hex.length == 4 ?\r\n    [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2)\r\n    , hex.substring(2, 3), hex.substring(2, 3)\r\n    , hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('') : hex\r\n}\r\n\r\n// Component to hex value\r\nfunction compToHex(comp) {\r\n  var hex = comp.toString(16)\r\n  return hex.length == 1 ? '0' + hex : hex\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nfunction proportionalSize(element, width, height) {\r\n  if (width == null || height == null) {\r\n    var box = element.bbox()\r\n\r\n    if (width == null)\r\n      width = box.width / box.height * height\r\n    else if (height == null)\r\n      height = box.height / box.width * width\r\n  }\r\n\r\n  return {\r\n    width:  width\r\n  , height: height\r\n  }\r\n}\r\n\r\n// Delta transform point\r\nfunction deltaTransformPoint(matrix, x, y) {\r\n  return {\r\n    x: x * matrix.a + y * matrix.c + 0\r\n  , y: x * matrix.b + y * matrix.d + 0\r\n  }\r\n}\r\n\r\n// Map matrix array to object\r\nfunction arrayToMatrix(a) {\r\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n}\r\n\r\n// Parse matrix if required\r\nfunction parseMatrix(matrix) {\r\n  if (!(matrix instanceof SVG.Matrix))\r\n    matrix = new SVG.Matrix(matrix)\r\n\r\n  return matrix\r\n}\r\n\r\n// Add centre point to transform object\r\nfunction ensureCentre(o, target) {\r\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n}\r\n\r\n// PathArray Helpers\r\nfunction arrayToString(a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\n// Deep new id assignment\r\nfunction assignNewId(node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n    if (node.childNodes[i] instanceof window.SVGElement)\r\n      assignNewId(node.childNodes[i])\r\n\r\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n}\r\n\r\n// Add more bounding box properties\r\nfunction fullBox(b) {\r\n  if (b.x == null) {\r\n    b.x      = 0\r\n    b.y      = 0\r\n    b.width  = 0\r\n    b.height = 0\r\n  }\r\n\r\n  b.w  = b.width\r\n  b.h  = b.height\r\n  b.x2 = b.x + b.width\r\n  b.y2 = b.y + b.height\r\n  b.cx = b.x + b.width / 2\r\n  b.cy = b.y + b.height / 2\r\n\r\n  return b\r\n}\r\n\r\n// Get id from reference string\r\nfunction idFromReference(url) {\r\n  var m = url.toString().match(SVG.regex.reference)\r\n\r\n  if (m) return m[1]\r\n}\r\n\r\n// Create matrix array for looping\r\nvar abcdef = 'abcdef'.split('')\n// Add CustomEvent to IE9 and IE10\r\nif (typeof window.CustomEvent !== 'function') {\r\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  var CustomEvent = function(event, options) {\r\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n    var e = document.createEvent('CustomEvent')\r\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n    return e\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n}\r\n\r\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n(function(w) {\r\n  var lastTime = 0\r\n  var vendors = ['moz', 'webkit']\r\n\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n  }\r\n\r\n  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n    function(callback) {\r\n      var currTime = new Date().getTime()\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n      var id = w.setTimeout(function() {\r\n        callback(currTime + timeToCall)\r\n      }, timeToCall)\r\n\r\n      lastTime = currTime + timeToCall\r\n      return id\r\n    }\r\n\r\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\r\n}(window))\r\n\r\nreturn SVG\r\n\r\n}));\r\n\n\n// WEBPACK FOOTER //\n// ./node_modules/svg.js/dist/svg.js"],"sourceRoot":""}